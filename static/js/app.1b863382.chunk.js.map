{"version":3,"sources":["src/components/NavBar.tsx","src/components/Footer.tsx","src/pages/homepage.tsx","src/components/LinkDescribe.tsx","src/pages/describe.tsx","App.tsx","web-build/register-service-worker.js","webpack:////home/runner/work/into-the-graph/into-the-graph/App.css?74d6","App.css"],"names":["useStyles","makeStyles","theme","menuButton","color","palette","common","white","solidButton","backgroundColor","primary","main","borderRadius","padding","dark","cursor","linkButton","textTransform","textDecoration","linkLogo","alignItems","display","paperSearch","width","searchInput","marginLeft","spacing","fontSize","flex","iconButton","NavBar","props","classes","React","useState","solid_webid","search_text","describe_uri","describe_endpoint","state","setState","stateRef","useRef","updateState","useCallback","update","current","history","useHistory","AppBar","title","position","Toolbar","variant","to","className","Tooltip","Button","Paper","component","onSubmit","event","preventDefault","push","InputBase","placeholder","onChange","target","value","inputProps","IconButton","type","aria-label","href","rel","darkLink","light","whiteLink","footer","marginTop","Copyright","Typography","align","Footer","Container","maxWidth","style","textAlign","link","secondary","paperPadding","margin","cardSubtitle","pos","Homepage","webid","projects_list","search","repositories_hash","category_pie","useEffect","marginBottom","elevation","pathname","uriLink","overflowWrap","LinkDescribe","prefixRegistry","test","uri","passClass","uriToShorten","prefix","startsWith","replace","shortenUri","$","require","DataTable","fullWidth","normalFont","smallerFont","alignLeft","paperTitle","fontWeight","loadSpinner","Describe","describe_results","search_results","isLoading","requestError","location","useLocation","getDescribeQuery","uri_to_describe","describe_query","encodeURIComponent","params","URLSearchParams","hash","get","console","log","axios","then","res","sparql_results_array","data","results","bindings","text_to_search","search_query","getSearchQuery","search_results_array","catch","error","CircularProgress","length","id","map","row","key","subject","predicate","object","graph","searchResult","Grid","container","item","xs","foundUri","foundLabel","createMuiTheme","typography","App","basename","View","height","exact","path","navigator","window","addEventListener","serviceWorker","register","scope","info","api","content","__esModule","default","module","i","options","exports","locals","___CSS_LOADER_API_IMPORT___"],"mappings":"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","file":"static/js/app.1b863382.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Toolbar, Button, Paper, InputBase, IconButton } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ExploreIcon from '@material-ui/icons/Explore';\n\n// import iconImage from '../../assets/icon.png';\n\n// import { AuthButton, Value } from '@solid/react';\n\nconst useStyles = makeStyles(theme => ({\n  menuButton: {\n    color: theme.palette.common.white\n  },\n  solidButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    borderRadius: '6px',\n    // boxShadow: '0 4px 6px rgba(50, 50, 93, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08)',\n    padding: '7px 14px',\n    '&:hover': {  \n      backgroundColor: theme.palette.primary.dark,\n      cursor: 'pointer'\n    }\n  },\n  linkButton: {\n    textTransform: 'none',\n    textDecoration: 'none'\n  },\n  linkLogo: {\n    // Seems to fit the 48px navbar height...\n    // height: '48px',\n    alignItems: 'center',\n    display: 'flex',\n  },\n  // Search box\n  paperSearch: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    // 50% of top appbar\n    width: `40%`,\n  },\n  searchInput: {\n    marginLeft: theme.spacing(1),\n    // Hardcoded width for search input\n    width: '50%',\n    fontSize: '14px',\n    flex: 1,\n  },\n  iconButton: {\n    padding: 5,\n  },\n}))\n  \nexport default function NavBar(props: any) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useState({\n    solid_webid: '',\n    search_text: '',\n    describe_uri: '',\n    describe_endpoint: ''\n  });\n\n  // Avoid conflict when async calls\n  const stateRef = React.useRef(state);\n  const updateState = React.useCallback((update) => {\n    stateRef.current = {...stateRef.current, ...update};\n    setState(stateRef.current);\n  }, [setState]);\n\n  let history = useHistory();\n\n  function submitSearch(event: any) {\n    event.preventDefault();\n    history.push('/describe?uri=' + state.search_text)\n    // Hard reload of the page: location.reload();\n  }\n\n  function handleChange(event: any) {\n    updateState({search_text: event.target.value});\n  }\n\n  return (\n    <AppBar title=\"\" position='static'>\n      <Toolbar variant='dense'>\n        <Link to=\"/\" className={classes.linkButton}>\n          {/* <img src={iconImage} style={{height: '2em', width: '2em', marginRight: '10px'}} alt=\"Logo\" /> */}\n          <Tooltip title='Into the Graph homepage'>\n            <Button className={classes.menuButton}>\n              <ExploreIcon />&nbsp;Into the graph\n            </Button>\n          </Tooltip>  \n        </Link>\n        <Link to=\"/describe?uri=http://bio2rdf.org/clinicaltrials:NCT00209495&endpoint=https://bio2rdf.org/sparql\" className={classes.linkButton}>\n          <Tooltip title='Describe an URI in a SPARQL endpoint'>\n            <Button className={classes.menuButton}>\n              <SearchIcon />&nbsp;Describe URI\n            </Button>\n          </Tooltip>\n        </Link>\n        <div className=\"flexGrow\"></div>\n        {/* <a href=\"https://github.com/MaastrichtU-IDS/into-the-graph\" \n            target=\"_blank\" rel=\"noopener noreferrer\" className={classes.linkButton}>\n          <Tooltip title='External link'>\n            <Button className={classes.menuButton}>\n              <AssignmentIcon />\n              &nbsp;Import report\n            </Button>\n          </Tooltip>\n        </a> */}\n        {/* <Tooltip title='Go to IDS Best Practices documentation'>\n          <Button className={classes.menuButton} target=\"_blank\"\n          href=\"https://maastrichtu-ids.github.io/best-practices\">\n            <MenuBookIcon />\n          </Button>\n        </Tooltip> */}\n        <Paper component=\"form\" className={classes.paperSearch}\n          onSubmit={submitSearch}\n        >\n          <InputBase  // https://material-ui.com/api/input-base/\n            className={classes.searchInput}\n            // placeholder=\"Search SPARQL endpoint\"\n            placeholder={\"Search\"}\n            onChange={handleChange}\n            inputProps={{ 'aria-label': 'search' }}\n            // fullWidth={true}\n          />\n          <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\n            <SearchIcon />\n          </IconButton>\n        </Paper>\n        <Tooltip  title='Go to https://github.com/MaastrichtU-IDS/into-the-graph'>\n          <Button className={classes.menuButton} target=\"_blank\"\n          href=\"https://github.com/MaastrichtU-IDS/into-the-graph\" rel=\"noopener noreferrer\">\n            <GitHubIcon />\n          </Button>\n        </Tooltip>\n        {/* <AuthButton title='Login with SOLID' className={classes.solidButton} popup=\"https://inrupt.net/common/popup.html\"/> */}\n      </Toolbar>\n    </AppBar>\n  );\n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles(theme => ({\n  darkLink: {\n    textDecoration: 'none',\n    color: 'inherit',\n    '&:hover': {\n      color: theme.palette.primary.light,\n      textDecoration: 'none',\n    },\n  },\n  whiteLink: {\n    textDecoration: 'none',\n    color: 'inherit',\n    '&:hover': {\n      color: theme.palette.primary.dark,\n      textDecoration: 'none',\n    },\n  },\n  footer: {\n    padding: theme.spacing(2),\n    marginTop: 'auto',\n    color: 'white',\n    backgroundColor: theme.palette.primary.main,\n  },\n}));\n\nfunction Copyright() {\n  const classes = useStyles();\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <a className={classes.darkLink} target=\"_blank\" rel=\"noopener noreferrer\"\n      href=\"https://maastrichtuniversity.nl/ids\">\n        Institute of Data Science at Maastricht University\n      </a>{' '}\n      {'2020.'}\n    </Typography>\n  );\n}\n\nexport default function Footer() {\n  const classes = useStyles();\n  // Set state in functional style:\n  // const [state, setState] = React.useState({search: '', name: 'Vincent'});\n  // console.log(state.search);\n  // // Set search without chaging name\n  // setState({...state, search: 'yo'})\n  // const onNameChange = React.useCallback((filterName) => {\n  //   console.log('callback', state.name);\n  // },\n  // [state.name]);\n  // // Tells callback to reload when change to state.name\n\n  // React.useEffect(() => {\n  //   console.log('componentDID mount');\n  //   return () => {\n  //     console.log('willMount');\n  //   }\n  // }, []) \n  // Empty dep list: will only run when componentDidMount\n\n  return (\n      <footer className={classes.footer}>\n        <Container maxWidth=\"md\" style={{textAlign: 'center'}}>\n          <Typography variant=\"body2\" >\n            This website is licensed under the&nbsp;\n            <a className={classes.whiteLink} target=\"_blank\" rel=\"noopener noreferrer\"\n            href=\"https://github.com/MaastrichtU-IDS/into-the-graph/blob/main/LICENSE\">\n              MIT license\n            </a>\n            {/* <img src={require('../assets/images/mit_license.png')} /> */}\n          </Typography>\n          <Copyright />\n        </Container>\n      </footer>\n  );\n}","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Container, Box, Button, Chip, Tooltip, Grid, Paper } from \"@material-ui/core\";\n// import { data } from \"@solid/query-ldflex\";\n// import data from \"@solid/query-ldflex\";\n\n// import { LoggedIn, LoggedOut, Value, useWebId } from '@solid/react';\n\n// import { Like } from '@solid/react';\n// import SolidStar from \"./SolidStar\";\n\n// import {newEngine} from '@comunica/actor-init-sparql';\n// import {ActorInitSparql} from '@comunica/actor-init-sparql/lib/ActorInitSparql-browser';\n// import {IQueryOptions, newEngineDynamicArged} from \"@comunica/actor-init-sparql/lib/QueryDynamic\";\n\nconst useStyles = makeStyles(theme => ({\n  paperSearch: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: '30%',\n  },\n  searchInput: {\n    marginLeft: theme.spacing(1),\n    width: '50%',\n    fontSize: '14px',\n    flex: 1,\n  },\n  link: {\n    textDecoration: 'none',\n    textTransform: 'none',\n    color: theme.palette.primary.main,\n    '&:hover': {\n      color: theme.palette.secondary.main,\n      textDecoration: 'none',\n    },\n  },\n  paperPadding: {\n    padding: theme.spacing(2, 2),\n    margin: theme.spacing(2, 2),\n  },\n  cardSubtitle: {\n    fontSize: 14,\n    marginTop: 8,\n  },\n  pos: {\n    // marginBottom: 12,\n  },\n}))\n\nexport default function Homepage() {\n  const classes = useStyles();\n  \n  const [state, setState] = React.useState({\n    webid: '',\n    projects_list: [],\n    search: '',\n    repositories_hash: {},\n    category_pie: {}\n  });\n\n  const stateRef = React.useRef(state);\n\n  // Avoid conflict when async calls\n  // Can be done with another lib (cf. Turgay)\n  const updateState = React.useCallback((update) => {\n    stateRef.current = {...stateRef.current, ...update};\n    setState(stateRef.current);\n  }, [setState]);\n\n  // useLocation hook to get SOLID WebID\n  // let solid_webid = useWebId();\n\n\n  // function createEmptyDocument() {\n  //   // const location = \"/public/into-the-graph/preferences.ttl\";\n  //   const webId = useWebId();\n  //   // console.log(\"webId!!\");\n  //   // console.log(webId);\n  //   // return data[webId + location].put();\n  // }\n\n  // async function WebIdStatus() {\n  //   updateState({webid: useWebId()})\n  //   // const webId = useWebId();\n  //   // .replace(\"profile/card#me\", \"public/into-the-graph/preferences.ttl\");\n  //   // const location = webId.replace(\"profile/card#me\", \"public/into-the-graph/preferences.ttl\");\n  //   // return data[webId + location].put();\n  //   return <span>Preferences stored at {webId}.</span>;\n  // }\n\n  // TODO: fix to use webid hook\n  // async function createEmptyDocument(location: any) {\n  //   // webId.replace(\"profile/card#me\", \"public/into-the-graph/preferences.ttl\");\n  //   return data[location].put();\n  // }\n  \n\n  // componentDidMount\n  React.useEffect(() => {\n    // console.log('solid_webid');\n    // console.log(solid_webid);\n\n    // Check SOLID pod for a user preferences file\n    // https://github.com/solid/react-components/blob/master/demo/app.jsx\n    // https://solid.github.io/react-components/\n\n  }, [])  \n  // This useless array needs to be added for React to understand he needs to use the state inside...\n\n  // }, [solid_webid])\n  // Trying out the SOLID webId hook\n\n  return(\n    <Container className='mainContainer' style={{ textAlign: 'left' }}>\n      <Typography variant=\"h4\" style={{textAlign: 'center', marginBottom: '15px'}}>\n        🧭 Into the Graph\n        {/* <img src={idsLogo} style={{maxWidth: '200px'}} alt=\"IDS Logo\" /> */}\n      </Typography>\n\n      <Paper elevation={4} className={classes.paperPadding}>\n        <Typography variant=\"body1\" style={{textAlign: 'center', marginBottom: '20px', marginTop: '15px'}}>\n          Provide the <b>URI to describe</b>, and the <b>SPARQL endpoint</b> queried in the URL parameters, such as:\n        </Typography>\n\n        <Typography variant=\"h5\" style={{textAlign: 'center', marginBottom: '20px'}}>\n          <Link to={{\n            pathname: '/describe',\n            search: '?uri=http://bio2rdf.org/clinicaltrials:NCT00209495&endpoint=https://bio2rdf.org/sparql',\n          }} className={classes.link}>\n            /describe?uri=http://bio2rdf.org/clinicaltrials:NCT00209495&endpoint=https://bio2rdf.org/sparql\n          </Link>\n        </Typography>\n      </Paper>\n\n      <Typography variant=\"body1\" style={{textAlign: 'left', marginBottom: '20px'}}>\n        <b>Into the Graph</b> provides a simple RDF web browser that just need a SPARQL endpoint URL to resolve URIs, and explore the available linked data.\n      </Typography>\n      \n      <Typography variant=\"body1\" style={{textAlign: 'left', marginBottom: '20px'}}>\n        This linked data browser features:\n        <br/>🔎 A web-based UI to browse any SPARQL endpoints content easily\n        <br/>🕸️ Native support for graphs (nquads)\n        <br/>🏗️ Work in progress: visualize and browse concepts using <a href='https://perfectgraph-5c619.web.app' target='_blank' rel=\"noopener noreferrer\"><code>perfect-graph</code></a>\n        <br/>🚧 Work in progress: insights about the content of the triplestore and its different graphs, using precomputed HCLS descriptives statistics\n      </Typography>\n\n\n      <Typography variant=\"body1\" style={{textAlign: 'left'}}>\n        Other relevant libraries:\n      </Typography>\n      <ul>\n        <li><Typography variant=\"body1\">\n          <a href='https://github.com/micheldumontier/torres-api-platform/' className={classes.link} target='_blank' rel=\"noopener noreferrer\">TORRES API platform</a> to store HCLS descriptive metadata for your dataset\n        </Typography></li>\n        <li><Typography variant=\"body1\">\n          <a href='https://github.com/MaastrichtU-IDS/fair-metadata' className={classes.link} target='_blank' rel=\"noopener noreferrer\">FAIR metadata</a> python lib: to generate HCLS descriptive metadata for your dataset\n        </Typography></li>\n        <li><Typography variant=\"body1\">\n          <a href='https://github.com/MaastrichtU-IDS/d2s-project-template/tree/master/datasets/preppi' className={classes.link} target='_blank' rel=\"noopener noreferrer\">Data2Services workflows</a> to generate RDF knowledge graphs from structured data using RML (RDF Mapping Language)\n        </Typography></li>\n      </ul>\n\n      {/* <LoggedIn>\n        <Typography style={{textAlign: 'center', marginBottom: '20px'}}>\n          Welcome <Value src=\"user.name\"/>!\n        </Typography>\n        <Typography style={{textAlign: 'center', marginBottom: '20px'}}>\n          Soon you will be able to use your SOLID account! \n        </Typography>\n      </LoggedIn>\n      <LoggedOut>\n        <Typography style={{textAlign: 'center', marginBottom: '20px'}}>\n          Welcome\n        </Typography>\n      </LoggedOut> */}\n\n    </Container>\n  )\n}\n\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\n// var Config = require('Config')\n\nconst useStyles = makeStyles(theme => ({\n  uriLink: {\n    textDecoration: 'none',\n    color: 'rgba(0, 0, 0, 0.87)',\n    '& :hover': {\n      color: theme.palette.primary.main,\n    },\n    overflowWrap: 'break-word'\n  }\n}));\n\n\n// Format a link to be displayedby shortening URI\nexport default function LinkDescribe(props: any) {\n  const classes = useStyles();\n\n  // TODO: improve, use centralized service? (prefixcommons/prefix.cc)\n  const prefixRegistry: any = {\n    \"rdf\":         \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n    \"rdfs\":        \"http://www.w3.org/2000/01/rdf-schema#\",\n    \"owl\":         \"http://www.w3.org/2002/07/owl#\",\n    \"skos\":        \"http://www.w3.org/2004/02/skos/core#\",\n    \"dc\":          \"http://purl.org/dc/elements/1.1/\",\n    \"dct\":         \"http://purl.org/dc/terms/\",\n    \"dctypes\":     \"http://purl.org/dc/dcmitype/\",\n    \"bl\":          \"https://w3id.org/biolink/vocab/\",\n    \"biolink\":     \"http://w3id.org/biolink/vocab/\",\n    \"d2s\":         \"https://w3id.org/d2s/\",\n    \"omop\":        \"http://api.ohdsi.org/WebAPI/vocabulary/concept/\",\n    \"cohd\":        \"https://w3id.org/trek/cohd/\",\n    \"bio2rdf\":     \"http://bio2rdf.org/\",\n    \"dbo\":         \"http://dbpedia.org/ontology/\",\n    \"dbp\":         \"http://dbpedia.org/property/\",\n    \"wd\":          \"http://www.wikidata.org/entity/\",\n    \"wdt\":         \"http://www.wikidata.org/prop/direct/\",\n    \"foaf\":        \"http://xmlns.com/foaf/0.1/\",\n    \"idot\":        \"http://identifiers.org/idot/\",\n    \"dcat\":        \"http://www.w3.org/ns/dcat#\",\n    \"void\":        \"http://rdfs.org/ns/void#\",\n    \"void-ext\":    \"http://ldf.fi/void-ext#\",\n    \"obo\":         \"http://purl.obolibrary.org/obo/\",\n    \"ncit\":        \"http://ncicb.nci.nih.gov/xml/owl/EVS/Thesaurus.owl#\",\n    \"xsd\":         \"http://www.w3.org/2001/XMLSchema#\",\n    \"schema\":      \"http://schema.org/\",\n    \"cito\":        \"http://purl.org/spar/cito/\",\n    \"prov\":        \"http://www.w3.org/ns/prov#\",\n    \"pav\":         \"http://purl.org/pav/\",\n    \"pplan\":       \"http://purl.org/net/p-plan#\",\n    \"np\":          \"http://www.nanopub.org/nschema#\",\n    \"npx\":         \"http://purl.org/nanopub/x/\",\n  };\n\n  function shortenUri(uriToShorten: string) {\n    for (const prefix in prefixRegistry) {\n      if (uriToShorten.startsWith(prefixRegistry[prefix])) {\n        return uriToShorten.replace(prefixRegistry[prefix], prefix + ':');\n      }\n    }\n    return uriToShorten;\n  }\n\n  if(/^(?:node[0-9]+)|((https?|ftp):.*)$/.test(props.uri)) {\n    // Process URIs\n    return (\n      <Link to={{\n        pathname: '/describe',\n        search: '?uri=' + props.uri,\n      }} className={classes.uriLink}>\n        <Typography variant={props.variant} className={props.passClass}\n        style={{overflowWrap: 'break-word'}}>\n          {shortenUri(props.uri)}\n        </Typography>\n      </Link>\n      // <a href={'/describe?uri=' + props.uri} className={classes.uriLink}>\n      //   <Typography variant={props.variant} className={props.passClass}\n      //   style={{overflowWrap: 'break-word'}}>\n      //     {shortenUri(props.uri)}\n      //   </Typography>\n      // </a>\n    )\n  }\n  return (\n    // For non URI\n    <Typography variant={props.variant} className={props.passClass} \n    style={{textAlign: 'left', overflowWrap: 'break-word'}}>\n      {props.uri}\n    </Typography>\n  )\n}","import React from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Container, Paper, Grid, CircularProgress, Button } from \"@material-ui/core\";\nimport axios from 'axios';\n\n// Official datatables.net docs\n// var $  = require( 'jquery' );\n// var dt = require( 'datatables.net' )();\n\n// Import from package.json install (from itg js)\nimport 'datatables.net-dt/css/jquery.dataTables.min.css'\n// import $ from 'jquery';\n\n// From https://medium.com/@zbzzn/integrating-react-and-datatables-not-as-hard-as-advertised-f3364f395dfa\nconst $ = require('jquery');\n\n$.DataTable = require('datatables.net');\n\nimport { Graph } from \"perfect-graph\";\nimport LinkDescribe from \"../components/LinkDescribe\";\n\n\nconst useStyles = makeStyles(theme => ({\n  link: {\n    textDecoration: 'none',\n    textTransform: 'none',\n    color: theme.palette.primary.main,\n    '&:hover': {\n      color: theme.palette.secondary.main,\n      textDecoration: 'none',\n    },\n  },\n  fullWidth: {\n    width: '100%',\n  },\n  normalFont: {\n    fontSize: '14px',\n  },\n  smallerFont: {\n    fontSize: '12px',\n  },\n  alignLeft: {\n    textAlign: 'left'\n  },\n  paperPadding: {\n    padding: theme.spacing(2, 2),\n    // margin: theme.spacing(2, 2),\n  },\n  paperTitle: {\n    fontWeight: 300,\n    marginBottom: theme.spacing(1),\n  },\n  loadSpinner: {\n    padding: theme.spacing(10, 10)\n  }\n}))\n\n\nexport default function Describe() {\n  const classes = useStyles();\n\n  const [state, setState] = React.useState({\n    describe_uri: '',\n    describe_endpoint: '',\n    describe_results: [],\n    search_results: [],\n    isLoading: true,\n    requestError: false\n  });\n  const stateRef = React.useRef(state);\n\n  // Avoid conflict when async calls\n  const updateState = React.useCallback((update) => {\n    stateRef.current = {...stateRef.current, ...update};\n    setState(stateRef.current);\n  }, [setState]);\n\n  // useLocation hook to get URL params\n  let location = useLocation();\n\n  // TODO: dont work to use Ref for datatables.net\n  // const datatableRef = React.useRef(null);\n  \n  // Build SPARQL query to describe a URI\n  function getDescribeQuery(uri_to_describe: any) {\n    var describe_query;\n    if(uri_to_describe.startsWith('node')) {\n      // Case it is a blank node in Ontotext GraphDB\n      // TODO: improve it\n      uri_to_describe = \"_:\" + uri_to_describe\n      describe_query = `SELECT DISTINCT ?subject ?predicate ?object ?graph WHERE {\n          GRAPH ?graph {\n            ` + uri_to_describe + ` ?predicate ?object .\n          }\n        } LIMIT 1000`\n    } else {\n      // Regular URI\n      uri_to_describe = \"<\" + uri_to_describe + \">\"\n      \n      // Define the query block that resolves graph URIs\n      // To returns only classes or all triples\n      var graphQuery = `SELECT * {\n        GRAPH ` + uri_to_describe + ` {\n          ?subject ?predicate ?object .\n          BIND(` + uri_to_describe + ` AS ?graph)\n        }\n      } LIMIT 1000`\n      // if (this.context.triplestore.graph_uri_resolution === \"classes\") {\n      //   // TODO: Add DISTINCT ? Might slow the query down in some cases\n      //   graphQuery = `SELECT * {\n      //     GRAPH ` + uri_to_describe + ` {\n      //       [] a ?object .\n      //       BIND(\"dummy subject\" AS ?subject)\n      //       BIND(\"dummy predicate\" AS ?predicate)\n      //     }\n      //   } LIMIT 1000`\n      // }\n\n      describe_query = `SELECT DISTINCT ?subject ?predicate ?object ?graph WHERE {\n        {\n          SELECT * {\n            GRAPH ?graph {\n              ` + uri_to_describe + ` ?predicate ?object .\n              BIND(` + uri_to_describe + ` AS ?subject)\n            }\n          } LIMIT 1000\n        } UNION {\n          SELECT * {\n            GRAPH ?graph {\n              ?subject ?predicate ` + uri_to_describe + ` .\n              BIND(` + uri_to_describe + ` AS ?object)\n            }\n          } LIMIT 1000\n        } UNION {\n          SELECT * {\n            GRAPH ?graph {\n              ?subject ` + uri_to_describe + ` ?object .\n              BIND(` + uri_to_describe + ` AS ?predicate)\n            }\n          } LIMIT 1000\n        } UNION {\n          ` + graphQuery + `\n        }\n      }`\n    }\n    return encodeURIComponent(describe_query);\n  }\n\n  function getSearchQuery(text_to_search: string) {\n    // let searchQuery = this.context.triplestore.search_query;\n    let search_query = ''\n    if (text_to_search === \"\") {\n      // If no text provided we use a default search query to get interesting concepts \n      search_query = `SELECT ?foundUri ?foundLabel WHERE {\n        ?foundUri a ?type ; ?p ?foundLabel .\n        VALUES ?p {<http://www.w3.org/2000/01/rdf-schema#label> <https://w3id.org/biolink/vocab/name>} .\n        FILTER(isLiteral(?foundLabel))\n        FILTER(isIRI(?foundUri))\n        } LIMIT 20`\n\n      // A custom default query can be set in settings.json\n      // let defaultSearchQuery = Config.default_search_query;\n      // if (defaultSearchQuery) {\n      //   searchQuery = defaultSearchQuery;\n      // } else {\n      //   // If no custom default_query defined in settings.json\n      //   searchQuery = `SELECT ?foundUri ?foundLabel WHERE {\n      //     ?foundUri a ?type ; ?p ?foundLabel .\n      //     VALUES ?p {<http://www.w3.org/2000/01/rdf-schema#label> <https://w3id.org/biolink/vocab/name>} .\n      //     FILTER(isLiteral(?foundLabel))\n      //     FILTER(isIRI(?foundUri))\n      //     } LIMIT 20`\n      // }\n    // } else if (search_query) {\n    //   // If defined in settings.json\n    //   // Results are provided through ?foundUri and ?foundLabel\n    //   // Use $TEXT_TO_SEARCH as search variable to replace\n    //   searchQuery = searchQuery.replace('$TEXT_TO_SEARCH', text_to_search)\n    } else {\n      // Default search query, if no query provided\n      search_query = `SELECT ?foundUri ?foundLabel WHERE {\n        ?foundUri ?p ?foundLabel .\n        VALUES ?p {<http://www.w3.org/2000/01/rdf-schema#label> <https://w3id.org/biolink/vocab/name>} .\n        FILTER(isLiteral(?foundLabel))\n        FILTER contains(?foundLabel, \"$TEXT_TO_SEARCH\")\n        } LIMIT 5`.replace('$TEXT_TO_SEARCH', text_to_search)\n    }\n    return encodeURIComponent(search_query);\n  }\n\n  function convertStringToNumber(string_to_convert: string) {\n    let hash = 0, i, chr;\n    for (i = 0; i < string_to_convert.length; i++) {\n      chr   = string_to_convert.charCodeAt(i);\n      hash  = ((hash << 5) - hash) + chr;\n      hash |= 0; // Convert to 32bit integer\n    }\n    return hash;\n  }\n\n  // Run on start of the page\n  React.useEffect(() => {\n    // Reset state\n    updateState({describe_results: {}})\n    updateState({search_results: {}})\n    updateState({isLoading: true})\n\n    // Get URL params \n    const params = new URLSearchParams(location.search + location.hash);\n\n    let describe_uri = params.get('uri');\n    let describe_endpoint = params.get('endpoint');\n\n    // Default value if not provided\n    if (!describe_uri) {\n      describe_uri = 'http://bio2rdf.org/clinicaltrials:NCT00209495';\n    }\n    if (!describe_endpoint) {\n      describe_endpoint = 'https://bio2rdf.org/sparql';\n    }\n\n    updateState({describe_uri: describe_uri})\n    updateState({describe_endpoint: describe_endpoint})\n\n    console.log('describe_endpoint');\n    console.log(describe_endpoint);\n\n    if(/^(?:node[0-9]+)|((https?|ftp):.*)$/.test(describe_uri)) {\n      // If URI provided\n      console.log(getDescribeQuery(describe_uri));\n      axios.get(describe_endpoint + `?query=` + getDescribeQuery(describe_uri))\n        .then(res => {\n          const sparql_results_array = res.data.results.bindings;\n          console.log(sparql_results_array)\n          // console.log(sparql_results_array[0].subject.value)\n          updateState({describe_results: sparql_results_array})\n          updateState({isLoading: false})\n\n          $('#datatableRef').DataTable();\n        \n          // const table = $(datatableRef).find('table').DataTable();\n          // Getting error when using useRef\n          // Unhandled Rejection (TypeError): this.getAttribute is not a function\n          // let table = $('.data-table-wrapper').find('table').DataTable();\n\n          // sparqlResultArray.forEach((sparqlResultRow) => {\n        })\n\n    } else {\n      // Full text search if not URI\n      axios.get(describe_endpoint + `?query=` + getSearchQuery(describe_uri))\n        .then(res => {\n          const search_results_array = res.data.results.bindings;\n          updateState({search_results: search_results_array})\n          updateState({isLoading: false})\n          // let searchResults = [];\n          // sparqlResultArray.forEach((sparqlResultRow) => {\n          //   searchResults.push({\n          //     foundUri: sparqlResultRow.foundUri.value , \n          //     foundLabel: sparqlResultRow.foundLabel.value\n          //   })\n          // })\n        })\n        .catch(error => {\n          console.log(error)\n          updateState({ requestError: true });\n          updateState({ isLoading: false });\n        })\n    }\n\n  }, [location])\n\n\n  return(\n    <Container className='mainContainer'>\n      <Typography variant=\"body2\" style={{textAlign: 'center', marginBottom: '20px'}}>\n        {state.describe_endpoint}\n      </Typography>\n      <Typography variant=\"h5\" style={{textAlign: 'center', marginBottom: '20px'}}>\n        {state.describe_uri}\n      </Typography>\n\n      {state.isLoading && (\n        <CircularProgress className={classes.loadSpinner} />\n      )}\n\n      {/* Display a datatable with subject, predicate, object, graph retrieved */}\n      {state.describe_results.length > 0 && ( \n        // <table table=\"true\" ref={datatableRef}>\n        <Paper elevation={4} className={classes.paperPadding}>\n          <table id='datatableRef' >\n            <thead>\n              <tr>\n                <th>Subject</th>\n                <th>Predicate</th>\n                <th>Object</th>\n                <th>Graph</th>\n              </tr>\n            </thead>\n            <tbody>\n              {/* Iterate Describe query results array */}\n              {state.describe_results.map((row: any, key: number) => {\n                // return <Tooltip title={displayDescription(row.name, row.description)} key={key}>\n                return <tr key={key}>\n                    {/* <td><LinkDescribe uri={row.graph.value} variant='body2'/></td> */}\n                    <td><LinkDescribe variant='body2' uri={row.subject.value}/></td>\n                    <td><LinkDescribe variant='body2' uri={row.predicate.value}/></td>\n                    <td><LinkDescribe variant='body2' uri={row.object.value}/></td>\n                    <td><LinkDescribe variant='body2' uri={row.graph.value}/></td>\n                  </tr>\n                {/* </Tooltip>; */}\n              })}\n            </tbody>\n          </table>\n        </Paper>\n      )}\n\n      {/* Show results of full text search query */}\n      {state.search_results.length > 0 &&\n        <Paper elevation={4} className={classes.paperPadding}>\n            {state.search_results.map(function(searchResult: any, key: number){\n              return <Grid container spacing={2} alignItems=\"center\" key={key}>\n                <Grid item xs={6}>\n                  <Paper className={classes.paperPadding}>\n                    <LinkDescribe variant='body2' uri={searchResult.foundUri.value}/>\n                  </Paper>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography variant=\"body2\">{searchResult.foundLabel.value}</Typography>\n                </Grid>\n              </Grid>\n            })}\n        </Paper>\n      }\n\n      {/* Show error message (if request fails) */}\n      {state.requestError && (\n        <Paper elevation={2} className={classes.paperPadding}>\n          <Typography variant=\"body2\">\n            The request to the SPARQL endpoint failed, try to <a href=\"\" className={classes.link}>reload the page ♻️</a><br/>\n            Or&nbsp;<a href=\"https://addons.mozilla.org/fr/firefox/addon/cors-everywhere/\" className={classes.link} target='_blank' rel=\"noopener noreferrer\">\n              enable CORS requests</a> in your browser.\n          </Typography>\n        </Paper>\n      )}\n\n      {/* Iterate a JSON object: */}\n      {/* {Object.keys(state.repositories_hash).map(function(repo: any){ ... })  */}\n\n      {/* image: {iconImage} */}\n      {/* Color: https://perfectgraph-5c619.web.app/?path=/story/components-components--view */}\n      {/* <Graph\n        style={{ width: '100%', height: 250 }}\n        nodes={[\n          {\n            id: 1,\n            position: { x: 10, y: 10 },\n            data: {\n              name: 'Institute of Data Science',\n              // image: 'https://raw.githubusercontent.com/MaastrichtU-IDS/into-the-graph/main/assets/icon.png',\n              story: `Develop responsible data science by design to accelerate discovery across all sectors of society.`\n              // color: 'grey'\n            }\n          },\n          {\n            id: 2,\n            position: { x: 600, y: 10 },\n            data: {\n              name: 'Maastricht University',\n              // image: 'https://raw.githubusercontent.com/MaastrichtU-IDS/into-the-graph/main/assets/icon.png',\n              story: `The most international university in the Netherlands, stands out for its innovative education model, and multidisciplinary approach to research and education.`\n              // color: 'grey'\n            }\n          },\n        ]}\n        edges={[\n          { id: 51, source: 1, target: 2 }\n        ]}\n        renderNode={({ item: { data } }) => (\n        <Graph.ProfileTemplate\n          name={data.name}\n          // image={data.image}\n          story={data.story}\n          // color= 'grey'\n          // style={{ backgroundColor: '#eceff1' }}\n        />\n      )}\n      /> */}\n\n      {/* <Graph\n        style={{ width: '100%', height: 250 }}\n        nodes={[\n          {\n            id: 1,\n            position: { x: 10, y: 10 },\n            data: { city: 'Amsterdam',  color: 'red' }\n          },\n          {\n            id: 2,\n            position: { x: 300, y: 10 },\n            data: { city: 'Maastricht', color: 'blue' }\n          },\n        ]}\n        edges={[\n          { id: 51, source: 1, target: 2 }\n        ]}\n        renderNode={({ item: { data } }) => (\n          <Graph.View\n            style={{ width: 100, height: 100, backgroundColor: data.color}}\n          >\n            <Graph.Text\n              style={{ fontSize: 20 }}\n            >\n              {data.city}\n            </Graph.Text>\n          </Graph.View>\n      )}\n      /> */}\n      \n      {/* ERROR: */}\n      {/* TypeError: theme.colors is undefined\nGraph\nnode_modules/perfect-graph/components/Graph/index.js:102\n\n   99 |   })('');\n  100 | }, [initialized, config.layout]);\n  101 | const theme = useTheme();\n> 102 | const backgroundColor = React.useMemo(() => C.rgbNumber(theme.colors.background), [theme.colors.background]);\n      | ^  103 | React.useEffect(() => {\n  104 |   stageRef.current.app.renderer.backgroundColor = backgroundColor;\n  105 | }, [backgroundColor]);\n   */}\n      \n    </Container>\n  )\n}","import React from \"react\";\nimport { View } from \"react-native\";\nimport { Router, Route } from \"./react-router\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport './App.css';\nimport NavBar from \"./src/components/NavBar\";\nimport Footer from \"./src/components/Footer\";\nimport Homepage from \"./src/pages/homepage\";\nimport Describe from \"./src/pages/describe\";\n\n// import blue from '@material-ui/core/colors/blue';\n\n// Change theme color and typography here\nconst theme = createMuiTheme({\n  palette: {\n    // Blue and orange\n    primary: { light: '#63a4ff', main: '#1976d2', dark: '#004ba0' },\n    secondary: { light: '#ffa040', main: '#ff6f00', dark: '#c43e00' },\n    // main: blue[700]\n    // primary: { light: blue[50], main: blue[600], dark: blue[900] },\n    // red: { light: '#f05545', main: '#b71c1c', dark: '#7f0000' },\n    // default: { light: '#fafafa', main: '#eceff1', dark: grey[600] }\n  },\n  typography: {\n    \"fontFamily\": \"\\\"Open Sans\\\", \\\"Roboto\\\", \\\"Arial\\\"\",\n    \"fontWeightLight\": 300,\n    \"fontWeightRegular\": 400,\n    \"fontWeightMedium\": 500\n    // \"fontSize\": 13\n  },\n});\n\nconst App = () => (\n  <MuiThemeProvider theme={theme}>\n    <Router basename=\"/into-the-graph/\">\n      <View style={{height: '100%', backgroundColor: '#eceff1'}}>\n        <NavBar />\n\n        <Route exact path=\"/\" component={Homepage} />\n        <Route path=\"/describe\" component={Describe} />\n\n        <Footer />\n      </View>\n    </Router>\n  </MuiThemeProvider>\n);\nexport default App;\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/into-the-graph/expo-service-worker.js', { scope: '/into-the-graph/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","var api = require(\"!./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!./node_modules/css-loader/dist/cjs.js!./App.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"./node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/css?family=Open+Sans);\"]);\n// Module\nexports.push([module.id, \".flexGrow {\\n  flex-grow: 1; \\n}\\n\\n.mainContainer {\\n  margin-top: 30px;\\n  margin-bottom: 20px;\\n  text-align: center;\\n}\\n\\n/* a {\\n  text-transform: none;\\n  text-decoration: none\\n} */\\n\\npre, code {\\n  font-family: monospace, monospace;\\n  border-radius: 6px;\\n  padding: 2px;\\n  color: white;\\n  background-color: #455a64;\\n  /* background-color: #1976d2; */\\n}\\n  \\n/* @import url(\\\"https://fonts.googleapis.com/icon?family=Material+Icons\\\");\\nbody {\\n  margin: 0;\\n  padding: 0;\\n  text-align: center; } */\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n"],"sourceRoot":""}