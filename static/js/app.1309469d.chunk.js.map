{"version":3,"sources":["src/NavBar.tsx","src/Footer.tsx","src/homepage.tsx","src/describe.tsx","App.tsx","web-build/register-service-worker.js","webpack:////home/runner/work/into-the-graph/into-the-graph/App.css?74d6","App.css","assets/icon.png"],"names":["useStyles","makeStyles","theme","menuButton","color","palette","common","white","solidButton","backgroundColor","primary","main","borderRadius","padding","dark","cursor","linkButton","textTransform","textDecoration","linkLogo","alignItems","display","NavBar","classes","AppBar","title","position","Toolbar","variant","to","className","Tooltip","src","iconImage","style","height","width","marginRight","alt","Button","target","href","rel","darkLink","light","whiteLink","footer","spacing","marginTop","Copyright","Typography","align","Footer","Container","maxWidth","textAlign","paperSearch","searchInput","marginLeft","fontSize","flex","link","cardSubtitle","pos","Homepage","React","useState","webid","projects_list","search","repositories_hash","category_pie","state","setState","stateRef","useRef","useCallback","update","current","useWebId","useEffect","marginBottom","$","DataTable","require","fullWidth","normalFont","smallerFont","alignLeft","paperPadding","paperTitle","fontWeight","Describe","location","useLocation","describe_uri","describe_endpoint","describe_results","search_results","isLoading","requestError","updateState","getDescribeQuery","uri_to_describe","describe_query","startsWith","encodeURIComponent","params","URLSearchParams","hash","get","console","log","test","axios","then","res","sparql_results_array","data","results","bindings","text_to_search","search_query","replace","getSearchQuery","search_results_array","catch","error","length","Paper","elevation","table","id","map","row","key","subject","value","predicate","object","graph","createMuiTheme","secondary","typography","App","basename","View","exact","path","component","navigator","window","addEventListener","serviceWorker","register","scope","info","api","content","__esModule","default","module","i","options","exports","locals","___CSS_LOADER_API_IMPORT___","push"],"mappings":"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","file":"static/js/app.1309469d.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Toolbar, Button } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport iconImage from '../assets/icon.png';\n\n// import { AuthButton, Value } from '@solid/react';\n\nconst useStyles = makeStyles(theme => ({\n  menuButton: {\n    color: theme.palette.common.white\n  },\n  solidButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    borderRadius: '6px',\n    // boxShadow: '0 4px 6px rgba(50, 50, 93, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08)',\n    padding: '7px 14px',\n    '&:hover': {  \n      backgroundColor: theme.palette.primary.dark,\n      cursor: 'pointer'\n    }\n  },\n  linkButton: {\n    textTransform: 'none',\n    textDecoration: 'none'\n  },\n  linkLogo: {\n    // Seems to fit the 48px navbar height...\n    // height: '48px',\n    alignItems: 'center',\n    display: 'flex',\n  },\n}))\n  \nexport default function NavBar() {\n  const classes = useStyles();\n\n  return (\n    <AppBar title=\"\" position='static'>\n      <Toolbar variant='dense'>\n        <Link to=\"/\" className={classes.linkLogo}>\n          <Tooltip title='Into the Graph homepage'>\n            <img src={iconImage} style={{height: '2em', width: '2em', marginRight: '10px'}} alt=\"Logo\" />\n          </Tooltip>\n        </Link>\n        <Link to=\"/describe\" className={classes.linkButton}>\n          <Tooltip title='Describe an URI in a SPARQL endpoint'>\n            <Button className={classes.menuButton}>\n              <SearchIcon />&nbsp;Describe URI\n            </Button>\n          </Tooltip>\n        </Link>\n        <div className=\"flexGrow\"></div>\n        {/* <a href=\"https://github.com/MaastrichtU-IDS/into-the-graph\" \n            target=\"_blank\" rel=\"noopener noreferrer\" className={classes.linkButton}>\n          <Tooltip title='External link'>\n            <Button className={classes.menuButton}>\n              <AssignmentIcon />\n              &nbsp;Import report\n            </Button>\n          </Tooltip>\n        </a> */}\n        {/* <Tooltip title='Go to IDS Best Practices documentation'>\n          <Button className={classes.menuButton} target=\"_blank\"\n          href=\"https://maastrichtu-ids.github.io/best-practices\">\n            <MenuBookIcon />\n          </Button>\n        </Tooltip> */}\n        <Tooltip  title='Go to https://github.com/MaastrichtU-IDS/into-the-graph'>\n          <Button className={classes.menuButton} target=\"_blank\"\n          href=\"https://github.com/MaastrichtU-IDS/into-the-graph\" rel=\"noopener noreferrer\">\n            <GitHubIcon />\n          </Button>\n        </Tooltip>\n        {/* <AuthButton title='Login with SOLID' className={classes.solidButton} popup=\"https://inrupt.net/common/popup.html\"/> */}\n      </Toolbar>\n    </AppBar>\n  );\n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles(theme => ({\n  darkLink: {\n    textDecoration: 'none',\n    color: 'inherit',\n    '&:hover': {\n      color: theme.palette.primary.light,\n      textDecoration: 'none',\n    },\n  },\n  whiteLink: {\n    textDecoration: 'none',\n    color: 'inherit',\n    '&:hover': {\n      color: theme.palette.primary.dark,\n      textDecoration: 'none',\n    },\n  },\n  footer: {\n    padding: theme.spacing(2),\n    marginTop: 'auto',\n    color: 'white',\n    backgroundColor: theme.palette.primary.main,\n  },\n}));\n\nfunction Copyright() {\n  const classes = useStyles();\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <a className={classes.darkLink} target=\"_blank\" rel=\"noopener noreferrer\"\n      href=\"https://maastrichtuniversity.nl/ids\">\n        Institute of Data Science at Maastricht University\n      </a>{' '}\n      {'2020.'}\n    </Typography>\n  );\n}\n\nexport default function Footer() {\n  const classes = useStyles();\n  // Set state in functional style:\n  // const [state, setState] = React.useState({search: '', name: 'Vincent'});\n  // console.log(state.search);\n  // // Set search without chaging name\n  // setState({...state, search: 'yo'})\n  // const onNameChange = React.useCallback((filterName) => {\n  //   console.log('callback', state.name);\n  // },\n  // [state.name]);\n  // // Tells callback to reload when change to state.name\n\n  // React.useEffect(() => {\n  //   console.log('componentDID mount');\n  //   return () => {\n  //     console.log('willMount');\n  //   }\n  // }, []) \n  // Empty dep list: will only run when componentDidMount\n\n  return (\n      <footer className={classes.footer}>\n        <Container maxWidth=\"md\" style={{textAlign: 'center'}}>\n          <Typography variant=\"body2\" >\n            This website is licensed under the&nbsp;\n            <a className={classes.whiteLink} target=\"_blank\" rel=\"noopener noreferrer\"\n            href=\"https://github.com/MaastrichtU-IDS/into-the-graph/blob/main/LICENSE\">\n              MIT license\n            </a>\n            {/* <img src={require('../assets/images/mit_license.png')} /> */}\n          </Typography>\n          <Copyright />\n        </Container>\n      </footer>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Container, Box, Button, Chip, Tooltip, Grid, Paper } from \"@material-ui/core\";\n// import { data } from \"@solid/query-ldflex\";\n// import data from \"@solid/query-ldflex\";\n\nimport { LoggedIn, LoggedOut, Value, useWebId } from '@solid/react';\n\n// import { Like } from '@solid/react';\n// import SolidStar from \"./SolidStar\";\n\n// import {newEngine} from '@comunica/actor-init-sparql';\n// import {ActorInitSparql} from '@comunica/actor-init-sparql/lib/ActorInitSparql-browser';\n// import {IQueryOptions, newEngineDynamicArged} from \"@comunica/actor-init-sparql/lib/QueryDynamic\";\n\nconst useStyles = makeStyles(theme => ({\n  paperSearch: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: '30%',\n  },\n  searchInput: {\n    marginLeft: theme.spacing(1),\n    width: '50%',\n    fontSize: '14px',\n    flex: 1,\n  },\n  link: {\n    textDecoration: 'none',\n    color: 'inherit',\n    '&:hover': {\n      color: theme.palette.primary.main,\n      textDecoration: 'none',\n    },\n  },\n  cardSubtitle: {\n    fontSize: 14,\n    marginTop: 8,\n  },\n  pos: {\n    // marginBottom: 12,\n  },\n}))\n\nexport default function Homepage() {\n  const classes = useStyles();\n  \n  const [state, setState] = React.useState({\n    webid: '',\n    projects_list: [],\n    search: '',\n    repositories_hash: {},\n    category_pie: {}\n  });\n\n  const stateRef = React.useRef(state);\n\n  // Avoid conflict when async calls\n  // Can be done with another lib (cf. Turgay)\n  const updateState = React.useCallback((update) => {\n    stateRef.current = {...stateRef.current, ...update};\n    setState(stateRef.current);\n  }, [setState]);\n\n  // useLocation hook to get SOLID WebID\n  let solid_webid = useWebId();\n\n\n  // function createEmptyDocument() {\n  //   // const location = \"/public/into-the-graph/preferences.ttl\";\n  //   const webId = useWebId();\n  //   // console.log(\"webId!!\");\n  //   // console.log(webId);\n  //   // return data[webId + location].put();\n  // }\n\n  // async function WebIdStatus() {\n  //   updateState({webid: useWebId()})\n  //   // const webId = useWebId();\n  //   // .replace(\"profile/card#me\", \"public/into-the-graph/preferences.ttl\");\n  //   // const location = webId.replace(\"profile/card#me\", \"public/into-the-graph/preferences.ttl\");\n  //   // return data[webId + location].put();\n  //   return <span>Preferences stored at {webId}.</span>;\n  // }\n\n  // TODO: fix to use webid hook\n  // async function createEmptyDocument(location: any) {\n  //   // webId.replace(\"profile/card#me\", \"public/into-the-graph/preferences.ttl\");\n  //   return data[location].put();\n  // }\n  \n\n  // componentDidMount\n  React.useEffect(() => {\n    // console.log('solid_webid');\n    // console.log(solid_webid);\n\n    // Check SOLID pod for a user preferences file\n    // https://github.com/solid/react-components/blob/master/demo/app.jsx\n    // https://solid.github.io/react-components/\n\n  }, [])  \n  // This useless array needs to be added for React to understand he needs to use the state inside...\n\n  // }, [solid_webid])\n  // Trying out the SOLID webId hook\n\n  return(\n    <Container className='mainContainer'>\n      <Typography variant=\"h4\" style={{textAlign: 'center', marginBottom: '15px'}}>\n        Into the Graph\n        {/* <img src={idsLogo} style={{maxWidth: '200px'}} alt=\"IDS Logo\" /> */}\n      </Typography>\n\n      <Typography variant=\"h5\" style={{textAlign: 'center'}}>\n        <a href=\"/describe?uri=http://bio2rdf.org/clinicaltrials:NCT00209495\">/describe?uri=http://bio2rdf.org/clinicaltrials:NCT00209495</a>\n      </Typography>\n\n      <Typography variant=\"body1\" style={{textAlign: 'left'}}>\n        Other relevant libraries:\n      </Typography>\n      <ul>\n        <li><a href='https://github.com/MaastrichtU-IDS/fair-metadata'>FAIR metadata</a> python lib: to generate HCLS descriptive metadata for your dataset</li>\n        <li><a href='https://github.com/micheldumontier/torres-api-platform/'>TORRES API platform</a> to store HCLS descriptive metadata for your dataset</li>\n        <li><a href='https://github.com/MaastrichtU-IDS/d2s-project-template/tree/master/datasets/preppi'>Data2Services workflows</a> to generate RDF knowledge graphs from structured data using RML (RDF Mapping Language)</li>\n      </ul>\n\n      {/* <LoggedIn>\n        <Typography style={{textAlign: 'center', marginBottom: '20px'}}>\n          Welcome <Value src=\"user.name\"/>!\n        </Typography>\n        <Typography style={{textAlign: 'center', marginBottom: '20px'}}>\n          Soon you will be able to use your SOLID account! \n        </Typography>\n      </LoggedIn>\n      <LoggedOut>\n        <Typography style={{textAlign: 'center', marginBottom: '20px'}}>\n          Welcome\n        </Typography>\n      </LoggedOut> */}\n\n    </Container>\n  )\n}\n\n","import React from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Container, Paper, Button } from \"@material-ui/core\";\nimport axios from 'axios';\n\n// Official datatables.net docs\n// var $  = require( 'jquery' );\n// var dt = require( 'datatables.net' )();\n\n// Import from package.json install (from itg js)\nimport 'datatables.net-dt/css/jquery.dataTables.min.css'\nimport $ from 'jquery';\n$.DataTable = require('datatables.net');\n\n// From https://medium.com/@zbzzn/integrating-react-and-datatables-not-as-hard-as-advertised-f3364f395dfa\n// const $ = require('jquery');\n\n// import { Graph } from \"perfect-graph\";\n\nimport iconImage from '../assets/icon.png';\n\n\nconst useStyles = makeStyles(theme => ({\n  fullWidth: {\n    width: '100%',\n  },\n  normalFont: {\n    fontSize: '14px',\n  },\n  smallerFont: {\n    fontSize: '12px',\n  },\n  alignLeft: {\n    textAlign: 'left'\n  },\n  paperPadding: {\n    padding: theme.spacing(2, 2),\n    // margin: theme.spacing(2, 2),\n  },\n  paperTitle: {\n    fontWeight: 300,\n    marginBottom: theme.spacing(1),\n  }\n}))\n\n\nexport default function Describe() {\n  const classes = useStyles();\n\n  // useLocation hook to get URL params\n  let location = useLocation();\n\n  const [state, setState] = React.useState({\n    describe_uri: '',\n    describe_endpoint: '',\n    describe_results: [],\n    search_results: [],\n    isLoading: true,\n    requestError: false\n  });\n\n  const stateRef = React.useRef(state);\n\n  // TODO: dont work to use Ref for datatables.net\n  // const datatableRef = React.useRef(null);\n\n  // Avoid conflict when async calls\n  const updateState = React.useCallback((update) => {\n    stateRef.current = {...stateRef.current, ...update};\n    setState(stateRef.current);\n  }, [setState]);\n  \n  // Build SPARQL query to describe a URI\n  function getDescribeQuery(uri_to_describe: any) {\n    var describe_query;\n    if(uri_to_describe.startsWith('node')) {\n      // Case it is a blank node in Ontotext GraphDB\n      // TODO: improve it\n      uri_to_describe = \"_:\" + uri_to_describe\n      describe_query = `SELECT DISTINCT ?subject ?predicate ?object ?graph WHERE {\n          GRAPH ?graph {\n            ` + uri_to_describe + ` ?predicate ?object .\n          }\n        } LIMIT 1000`\n    } else {\n      // Regular URI\n      uri_to_describe = \"<\" + uri_to_describe + \">\"\n      \n      // Define the query block that resolves graph URIs\n      // To returns only classes or all triples\n      var graphQuery = `SELECT * {\n        GRAPH ` + uri_to_describe + ` {\n          ?subject ?predicate ?object .\n          BIND(` + uri_to_describe + ` AS ?graph)\n        }\n      } LIMIT 1000`\n      // if (this.context.triplestore.graph_uri_resolution === \"classes\") {\n      //   // TODO: Add DISTINCT ? Might slow the query down in some cases\n      //   graphQuery = `SELECT * {\n      //     GRAPH ` + uri_to_describe + ` {\n      //       [] a ?object .\n      //       BIND(\"dummy subject\" AS ?subject)\n      //       BIND(\"dummy predicate\" AS ?predicate)\n      //     }\n      //   } LIMIT 1000`\n      // }\n\n      describe_query = `SELECT DISTINCT ?subject ?predicate ?object ?graph WHERE {\n        {\n          SELECT * {\n            GRAPH ?graph {\n              ` + uri_to_describe + ` ?predicate ?object .\n              BIND(` + uri_to_describe + ` AS ?subject)\n            }\n          } LIMIT 1000\n        } UNION {\n          SELECT * {\n            GRAPH ?graph {\n              ?subject ?predicate ` + uri_to_describe + ` .\n              BIND(` + uri_to_describe + ` AS ?object)\n            }\n          } LIMIT 1000\n        } UNION {\n          SELECT * {\n            GRAPH ?graph {\n              ?subject ` + uri_to_describe + ` ?object .\n              BIND(` + uri_to_describe + ` AS ?predicate)\n            }\n          } LIMIT 1000\n        } UNION {\n          ` + graphQuery + `\n        }\n      }`\n    }\n    return encodeURIComponent(describe_query);\n  }\n\n  function getSearchQuery(text_to_search: string) {\n    // let searchQuery = this.context.triplestore.search_query;\n    let search_query = ''\n    if (text_to_search === \"\") {\n      // If no text provided we use a default search query to get interesting concepts \n      search_query = `SELECT ?foundUri ?foundLabel WHERE {\n        ?foundUri a ?type ; ?p ?foundLabel .\n        VALUES ?p {<http://www.w3.org/2000/01/rdf-schema#label> <https://w3id.org/biolink/vocab/name>} .\n        FILTER(isLiteral(?foundLabel))\n        FILTER(isIRI(?foundUri))\n        } LIMIT 20`\n\n      // A custom default query can be set in settings.json\n      // let defaultSearchQuery = Config.default_search_query;\n      // if (defaultSearchQuery) {\n      //   searchQuery = defaultSearchQuery;\n      // } else {\n      //   // If no custom default_query defined in settings.json\n      //   searchQuery = `SELECT ?foundUri ?foundLabel WHERE {\n      //     ?foundUri a ?type ; ?p ?foundLabel .\n      //     VALUES ?p {<http://www.w3.org/2000/01/rdf-schema#label> <https://w3id.org/biolink/vocab/name>} .\n      //     FILTER(isLiteral(?foundLabel))\n      //     FILTER(isIRI(?foundUri))\n      //     } LIMIT 20`\n      // }\n    // } else if (search_query) {\n    //   // If defined in settings.json\n    //   // Results are provided through ?foundUri and ?foundLabel\n    //   // Use $TEXT_TO_SEARCH as search variable to replace\n    //   searchQuery = searchQuery.replace('$TEXT_TO_SEARCH', text_to_search)\n    } else {\n      // Default search query, if no query provided\n      search_query = `SELECT ?foundUri ?foundLabel WHERE {\n        ?foundUri ?p ?foundLabel .\n        VALUES ?p {<http://www.w3.org/2000/01/rdf-schema#label> <https://w3id.org/biolink/vocab/name>} .\n        FILTER(isLiteral(?foundLabel))\n        FILTER contains(?foundLabel, \"$TEXT_TO_SEARCH\")\n        } LIMIT 5`.replace('$TEXT_TO_SEARCH', text_to_search)\n    }\n    return encodeURIComponent(search_query);\n  }\n\n\n  // On start of the page\n  React.useEffect(() => {\n    \n    // Get URL params \n    const params = new URLSearchParams(location.search + location.hash);\n\n    let describe_uri = params.get('uri');\n    let describe_endpoint = params.get('endpoint');\n\n    // Default value if not provided\n    if (!describe_uri) {\n      describe_uri = 'http://bio2rdf.org/clinicaltrials:NCT00209495';\n    }\n    if (!describe_endpoint) {\n      describe_endpoint = 'https://bio2rdf.org/sparql';\n    }\n\n    updateState({describe_uri: describe_uri})\n    updateState({describe_endpoint: describe_endpoint})\n\n    console.log('describe_endpoint');\n    console.log(describe_endpoint);\n\n    if(/^(?:node[0-9]+)|((https?|ftp):.*)$/.test(describe_uri)) {\n      // If URI provided\n      console.log(getDescribeQuery(describe_uri));\n      axios.get(describe_endpoint + `?query=` + getDescribeQuery(describe_uri))\n        .then(res => {\n          const sparql_results_array = res.data.results.bindings;\n          console.log(sparql_results_array)\n          // console.log(sparql_results_array[0].subject.value)\n          updateState({describe_results: sparql_results_array})\n          updateState({isLoading: false})\n\n          const table = $('#datatableRef').DataTable();\n        \n          // const table = $(datatableRef).find('table').DataTable();\n          // Getting error when using useRef\n          // Unhandled Rejection (TypeError): this.getAttribute is not a function\n          // let table = $('.data-table-wrapper').find('table').DataTable();\n\n          // sparqlResultArray.forEach((sparqlResultRow) => {\n        })\n\n    } else {\n      // Full text search if not URI\n      axios.get(describe_endpoint + `?query=` + getSearchQuery(describe_uri))\n        .then(res => {\n          const search_results_array = res.data.results.bindings;\n          updateState({search_results: search_results_array})\n          updateState({isLoading: false})\n          // let searchResults = [];\n          // sparqlResultArray.forEach((sparqlResultRow) => {\n          //   searchResults.push({\n          //     foundUri: sparqlResultRow.foundUri.value , \n          //     foundLabel: sparqlResultRow.foundLabel.value\n          //   })\n          // })\n        })\n        .catch(error => {\n          console.log(error)\n          updateState({ requestError: true });\n          updateState({ isLoading: false });\n        })\n    }\n\n  }, [location])\n\n\n  return(\n    <Container className='mainContainer'>\n      <Typography variant=\"body2\" style={{textAlign: 'center', marginBottom: '20px'}}>\n        {state.describe_endpoint}\n      </Typography>\n      <Typography variant=\"h5\" style={{textAlign: 'center', marginBottom: '20px'}}>\n        {state.describe_uri}\n      </Typography>\n\n      {state.describe_results.length > 0 && ( \n        // <table table=\"true\" ref={datatableRef}>\n        <Paper elevation={4} className={classes.paperPadding}>\n          <table table=\"true\" id='datatableRef' >\n            <thead>\n              <tr>\n                <th>Subject</th>\n                <th>Predicate</th>\n                <th>Object</th>\n                <th>Graph</th>\n              </tr>\n            </thead>\n            <tbody>\n              {/* Iterate Describe query results array */}\n              {state.describe_results.map((row: any, key: number) => {\n                // return <Tooltip title={displayDescription(row.name, row.description)} key={key}>\n                return <tr key={key}>\n                    {/* <td><LinkDescribe uri={row.graph.value} variant='body2'/></td> */}\n                    <td><Typography variant=\"body2\">{row.subject.value}</Typography></td>\n                    <td><Typography variant=\"body2\">{row.predicate.value}</Typography></td>\n                    <td><Typography variant=\"body2\">{row.object.value}</Typography></td>\n                    <td><Typography variant=\"body2\">{row.graph.value}</Typography></td>\n                  </tr>\n                {/* </Tooltip>; */}\n              })}\n            </tbody>\n          </table>\n        </Paper>\n      )}\n\n      {/* Iterate a JSON object: */}\n      {/* {Object.keys(state.repositories_hash).map(function(repo: any){ ... })  */}\n\n      {/* image: {iconImage} */}\n      {/* Color: https://perfectgraph-5c619.web.app/?path=/story/components-components--view */}\n      {/* <Graph\n        style={{ width: '100%', height: 250 }}\n        nodes={[\n          {\n            id: 1,\n            position: { x: 10, y: 10 },\n            data: {\n              name: 'Institute of Data Science',\n              image: 'https://raw.githubusercontent.com/MaastrichtU-IDS/into-the-graph/main/assets/icon.png',\n              story: `Develop responsible data science by design to accelerate discovery across all sectors of society.`,\n              color: 'grey'\n            }\n          },\n          {\n            id: 2,\n            position: { x: 600, y: 10 },\n            data: {\n              name: 'Maastricht University',\n              image: 'https://raw.githubusercontent.com/MaastrichtU-IDS/into-the-graph/main/assets/icon.png',\n              story: `The most international university in the Netherlands, stands out for its innovative education model, and multidisciplinary approach to research and education.`,\n              color: 'grey'\n            }\n          },\n        ]}\n        edges={[\n          { id: 51, source: 1, target: 2 }\n        ]}\n        renderNode={({ item: { data } }) => (\n        <Graph.ProfileTemplate\n          name={data.name}\n          image={data.image}\n          story={data.story}\n          style={{ backgroundColor: '#eceff1' }}\n        />\n      )}\n      /> */}\n      \n      \n    </Container>\n  )\n}","import React from \"react\";\nimport { View } from \"react-native\";\nimport { Router, Route } from \"./react-router\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport './App.css';\nimport NavBar from \"./src/NavBar\";\nimport Footer from \"./src/Footer\";\nimport Homepage from \"./src/homepage\";\nimport Describe from \"./src/describe\";\n\n// import blue from '@material-ui/core/colors/blue';\n\n// Change theme color and typography here\nconst theme = createMuiTheme({\n  palette: {\n    primary: { light: '#63a4ff', main: '#1976d2', dark: '#004ba0' },\n    secondary: { light: '#4caf50', main: '#087f23', dark: '#00600f' },\n    // main: blue[700]\n    // primary: { light: blue[50], main: blue[600], dark: blue[900] },\n    // red: { light: '#f05545', main: '#b71c1c', dark: '#7f0000' },\n    // default: { light: '#fafafa', main: '#eceff1', dark: grey[600] }\n  },\n  typography: {\n    \"fontFamily\": \"\\\"Open Sans\\\", \\\"Roboto\\\", \\\"Arial\\\"\",\n    \"fontWeightLight\": 300,\n    \"fontWeightRegular\": 400,\n    \"fontWeightMedium\": 500\n    // \"fontSize\": 13\n  },\n});\n\nconst App = () => (\n  <MuiThemeProvider theme={theme}>\n    <Router basename=\"/into-the-graph/\">\n      <View style={{height: '100%', backgroundColor: '#eceff1'}}>\n        <NavBar />\n\n        <Route exact path=\"/\" component={Homepage} />\n        <Route path=\"/describe\" component={Describe} />\n\n        <Footer />\n      </View>\n    </Router>\n  </MuiThemeProvider>\n);\nexport default App;\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/into-the-graph/expo-service-worker.js', { scope: '/into-the-graph/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","var api = require(\"!./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!./node_modules/css-loader/dist/cjs.js!./App.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"./node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/css?family=Open+Sans);\"]);\n// Module\nexports.push([module.id, \"/* @import url('https://cdn.datatables.net/1.10.23/css/jquery.dataTables.css'); */\\n\\n.flexGrow {\\n  flex-grow: 1; \\n}\\n\\n.mainContainer {\\n  margin-top: 30px;\\n  margin-bottom: 20px;\\n}\\n\\npre, code {\\n  font-family: monospace, monospace;\\n  border-radius: 6px;\\n  padding: 2px;\\n  color: white;\\n  background-color: #455a64;\\n  /* background-color: #1976d2; */\\n}\\n  \\n/* @import url(\\\"https://fonts.googleapis.com/icon?family=Material+Icons\\\");\\nbody {\\n  margin: 0;\\n  padding: 0;\\n  text-align: center; } */\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","module.exports = __webpack_public_path__ + \"static/media/icon.72626586.png\";"],"sourceRoot":""}