{"version":3,"sources":["src/components/Context.tsx","src/components/Settings.tsx","src/components/NavBar.tsx","src/components/Footer.tsx","src/pages/homepage.tsx","src/components/LinkDescribe.tsx","src/pages/describe.tsx","App.tsx","web-build/register-service-worker.js","webpack:////home/runner/work/into-the-graph/into-the-graph/App.css?74d6","App.css"],"names":["Context","React","createContext","useStyles","makeStyles","theme","settingsForm","width","marginTop","spacing","marginBottom","saveButton","textTransform","margin","fullWidth","normalFont","fontSize","smallerFont","alignLeft","textAlign","paperPadding","padding","paperTitle","fontWeight","Settings","classes","useState","solid_webid","search_text","describe_uri","describe_endpoint","metadata_endpoint","open","dialogOpen","sparql_endpoint_autocomplete","metadata_endpoint_autocomplete","search_query_autocomplete","search_query","custom_search_query","state","setState","stateRef","useRef","updateState","useCallback","update","current","useContext","context","setContext","handleAutocompleteSparqlEndpoint","input_text","console","log","target","value","innerText","handleAutocompleteMetadataEndpoint","handleAutocompleteSearchQuery","autocomplete_element","example_search_virtuoso","example_search_graphdb","example_search_default","useEffect","localStorageConfig","localStorage","getItem","configState","JSON","parse","sparql_endpoint","Container","className","onSubmit","event","settings_object","setItem","stringify","handleSubmit","FormControl","style","Typography","variant","FormHelperText","Autocomplete","onChange","onInputChange","id","options","freeSolo","includeInputInList","ListboxProps","renderInput","params","TextField","label","Button","type","color","Snackbar","onClose","reason","autoHideDuration","menuButton","palette","common","white","solidButton","backgroundColor","primary","main","borderRadius","dark","cursor","linkButton","textDecoration","linkLogo","alignItems","display","paperSearch","searchInput","marginLeft","flex","iconButton","NavBar","setOpen","anchorEl","setAnchorEl","history","useHistory","AppBar","title","position","Toolbar","to","Tooltip","Paper","component","preventDefault","push","InputBase","placeholder","inputProps","IconButton","aria-label","onClick","currentTarget","prev","Popper","ClickAwayListener","onClickAway","elevation","href","rel","darkLink","light","whiteLink","footer","Copyright","align","Footer","maxWidth","link","secondary","cardSubtitle","pos","Homepage","useTheme","webid","projects_list","search","repositories_hash","category_pie","pathname","uriLink","overflowWrap","LinkDescribe","props","prefixRegistry","test","uri","passClass","uriToShorten","prefix","startsWith","replace","shortenUri","$","require","DataTable","loadSpinner","datatable_text","wordBreak","Describe","describe_results","search_results","graph_data","nodes","edges","isLoading","requestError","location","useLocation","URLSearchParams","hash","get","axios","uri_to_describe","describe_query","encodeURIComponent","getDescribeQuery","then","res","sparql_results_array","data","results","bindings","graph_nodes","graph_edges","node_count","forEach","result_row","subject","x","y","object","edge_id","predicate","source","graph_nodes_array","Object","keys","map","node_id","text_to_search","getSearchQuery","search_results_array","catch","error","CircularProgress","length","row","key","graph","searchResult","Grid","container","item","xs","foundUri","foundLabel","height","renderNode","View","Text","App","createMuiTheme","typography","Provider","basename","exact","path","navigator","window","addEventListener","serviceWorker","register","scope","info","api","content","__esModule","default","module","i","exports","locals","___CSS_LOADER_API_IMPORT___"],"mappings":"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","file":"static/js/app.26332fa6.chunk.js","sourcesContent":["import React from \"react\";\n\n// TODO: NOT USED anymore, using localStorage now\n// @ts-ignore useless warning about 1 expected argument\nconst Context = React.createContext();\n\nexport default Context;\n\n\n// Default values and structure defined in App.js\n// const Context = React.createContext('https://bio2rdf.org/sparql');\n\n// const Context = React.createContext([{\n//   context: 'https://bio2rdf.org/sparql',\n//   setContext: () => {}\n//   // describe_uri: '',\n//   // solid_webid: '',\n// // }, () => {}]);\n// }]);\n// }, (describe_endpoint: string) => {}]);\n","import React, { Component } from \"react\"; \nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Popper, ClickAwayListener } from \"@material-ui/core\";\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Context from './Context';\nimport { FormControl, TextField, Input, InputLabel, FormHelperText } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SaveIcon from '@material-ui/icons/Save';\n\nconst useStyles = makeStyles(theme => ({\n  settingsForm: {\n    width: '90%',\n    // textAlign: 'center',\n    '& .MuiFormControl-root': {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n    '& .MuiFormHelperText-root': {\n      marginTop: theme.spacing(0),\n      marginBottom: theme.spacing(1),\n    },\n  },\n  saveButton: {\n    textTransform: 'none',\n    margin: theme.spacing(2, 2),\n    // maxWidth: '400px'\n  },\n  fullWidth: {\n    width: '100%',\n  },\n  normalFont: {\n    fontSize: '14px',\n  },\n  smallerFont: {\n    fontSize: '12px',\n  },\n  alignLeft: {\n    textAlign: 'left'\n  },\n  paperPadding: {\n    padding: theme.spacing(1, 1),\n    margin: theme.spacing(1, 1),\n  },\n  marginBottom: {\n    marginBottom: theme.spacing(1),\n  },\n  paperTitle: {\n    fontWeight: 300,\n    marginBottom: theme.spacing(1),\n  }\n}))\n\n// function Alert(props) {\nfunction Alert() {\n  return <MuiAlert elevation={6} variant=\"filled\" />;\n}\n\nexport default function Settings() {\n  const classes = useStyles();\n\n  const [state, setState] = React.useState({\n    solid_webid: '',\n    search_text: '',\n    describe_uri: '',\n    describe_endpoint: '',\n    metadata_endpoint: '',\n    open: false, \n    dialogOpen: false,\n    sparql_endpoint_autocomplete: '',\n    metadata_endpoint_autocomplete: '',\n    search_query_autocomplete: '',\n    search_query: '',\n    custom_search_query: '',\n  });\n\n  // Avoid state conflict when async calls\n  const stateRef = React.useRef(state);\n  const updateState = React.useCallback((update) => {\n    stateRef.current = {...stateRef.current, ...update};\n    setState(stateRef.current);\n  }, [setState]);\n\n  // Get context to edit endpoint URL\n  const [context, setContext]: any = React.useContext(Context);\n\n\n//   constructor(props) {\n//     super(props);\n//     // this.formSparqlEndpoint = React.createRef(); \n//     this.formGraphsOverview = React.createRef(); \n//     this.formGraphUriResolution = React.createRef(); \n//     this.formSearchQuery = React.createRef(); \n//     // this.formOpenapiUrl = React.createRef(); \n//     // this.formComunicaUrl = React.createRef(); \n//     // this.formFilebrowserUrl = React.createRef(); \n//     // this.setState({ sparql_endpoint_autocomplete: this.context.triplestore.sparql_endpoint})\n//  }\n\n  // Close Snackbar\n  function handleClose (event: any, reason: any) {\n    updateState({ open: false});\n  };\n  // function handleDialogClose (event: any, reason: any) {\n  //   updateState({ dialogOpen: false});\n  // };\n\n  // function handleAutocomplete(stateToUpdate: any, searchText: any) {\n  function handleAutocompleteSparqlEndpoint(input_text: any) {\n    // Generate specific state key for this autocomplete\n    console.log(\"Update state \")\n    if (input_text && input_text.target){\n      if (input_text.target.value && input_text.target.value !== 0) {\n        updateState({ sparql_endpoint_autocomplete: input_text.target.value})\n      } else {\n        updateState({ sparql_endpoint_autocomplete: input_text.target.innerText})\n      }\n    }\n  }\n\n  function handleAutocompleteMetadataEndpoint(input_text: any) {\n    // Generate specific state key for this autocomplete\n    console.log(\"Update state \")\n    if (input_text && input_text.target){\n      if (input_text.target.value && input_text.target.value !== 0) {\n        updateState({ sparql_endpoint_autocomplete: input_text.target.value})\n      } else {\n        updateState({ sparql_endpoint_autocomplete: input_text.target.innerText})\n      }\n    }\n  }\n\n  function handleAutocompleteSearchQuery(autocomplete_element: any) {\n    // Generate specific state key for this autocomplete\n    let search_query_autocomplete = '';\n    if (autocomplete_element && autocomplete_element.target){\n      if (autocomplete_element.target.value && autocomplete_element.target.value !== 0) {\n        search_query_autocomplete = autocomplete_element.target.value\n      } else {\n        search_query_autocomplete = autocomplete_element.target.innerText\n      }\n    }\n    let search_query = '';\n    if (search_query_autocomplete === 'Optimized search in Virtuoso') {\n      search_query = example_search_virtuoso;\n    } else if (search_query_autocomplete === 'Optimized search in Ontotext GraphDB') {\n      search_query = example_search_graphdb;\n    } else if (search_query_autocomplete === 'Define a custom search query') {\n      search_query = state.custom_search_query;\n    } else {\n      // } else if (autocomplete_string == 'Generic search query') {\n      search_query = example_search_default;\n    }\n    // 'Generic search query',\n    // 'Optimized search in Virtuoso',\n    // 'Optimized search in Ontotext GraphDB',\n    // 'Define a custom search query', state.custom_search_query\n  //   t example_search_graphdb\n  // const example_search_virtuoso\n  // const example_search_default\n    // convert autocomplete to search queries\n    updateState({ search_query: search_query, search_query_autocomplete: search_query_autocomplete})\n  }\n\n  // Save settings\n  // function handleSubmit (event: any) {\n  //   event.preventDefault();\n  //   updateContext({\n  //     describe_endpoint: state.sparql_endpoint_autocomplete, \n  //     // graphs_overview: this.formGraphsOverview.current.value,\n  //     // graph_uri_resolution: this.formGraphUriResolution.current.value,\n  //     // openapi_url: this.state.openapi_url_autocomplete, \n  //     // comunica_url: this.state.comunica_url_autocomplete,\n  //     // filebrowser_url: this.state.filebrowser_url_autocomplete, \n  //     // search_query: this.formSearchQuery.current.value, \n  //   });\n  //   updateState({ open: true });\n  // }\n  function handleSubmit (event: any) {\n    // Prevent from reloading the page when submitting the form:\n    // event.preventDefault();\n    updateState({ open: true });\n    console.log('context before change, and sparql endpoint autocomplete value')\n    console.log(context)\n    console.log(state.sparql_endpoint_autocomplete)\n    setContext(state.sparql_endpoint_autocomplete)\n    console.log('Context after setContext')\n    console.log(context)\n    const settings_object = {\n      sparql_endpoint: state.sparql_endpoint_autocomplete,\n      metadata_endpoint: state.metadata_endpoint_autocomplete,\n      search_query: state.search_query,\n      search_query_autocomplete: state.search_query_autocomplete,\n    }\n    localStorage.setItem(\"intothegraphSettings\", JSON.stringify(settings_object));\n  }\n\n  // function confirmDeleteCache() {\n  //   updateState({ dialogOpen: true });\n  // }\n  // function doDeleteCache() {\n  //   localStorage.clear();\n  //   window.location.reload();\n  // }\n\n  const sparqlEndointList = [\n    'https://graphdb.dumontierlab.com/repositories/trek',\n    'https://graphdb.dumontierlab.com/repositories/bio2vec',\n    'https://graphdb.dumontierlab.com/repositories/ncats-red-kg',\n    'https://graphdb.dumontierlab.com/repositories/bio2rdf-ammar',\n    'https://bio2rdf.org/sparql',\n    'http://dbpedia.org/sparql',\n    'http://rdf.disgenet.org/sparql/',    // Disease - Gene associations and else. Virtuoso\n    'http://rdf.pathwaycommons.org/sparql/',\n    'https://stars-app.renci.org/uberongraph/sparql',\n    'http://w3id.org/FAIR_COVID19/sparql/',\n    'https://graphdb.dumontierlab.com/repositories/covid-kg',\n    'https://graphdb.dumontierlab.com/repositories/geoeconomics',  // IDS KG course (GeoNames and WorldBank)\n    'https://data.gesis.org/claimskg/sparql',   // ClaimsKG\n    'http://opencitations.net/index/sparql',  // Law OpenCitation corpus. Virtuoso\n    'http://opencitations.net/sparql',    // Virtuoso\n    'https://joinup.ec.europa.eu/sparql/',   // EU Joinup initiative. Virtuoso\n    'http://data.europa.eu/euodp/sparqlep', // EU Open Data Portal. Seems Virtuoso\n    'http://publications.europa.eu/webapi/rdf/sparql',  // EU Cellar Law dataset. Seems Virtuoso\n    'http://digital-agenda-data.eu/data/sparql', // EU  Digital Agenda Scoreboard dataset. Seems Virtuoso\n    'http://data.persee.fr/sparql',   // Dataset in French about publications and bibliography. Virtuoso\n    'http://lod.openlinksw.com/sparql',\n    'http://data.doremus.org/sparql',   // About Music and Arts. Virtuoso search works\n    'http://data.allie.dbcls.jp/sparql/',   // search service for abbreviations and long forms utilized in Lifesciences. Virtuoso\n    'http://sparql.southgreen.fr',\n    'https://sparql.nextprot.org',\n    'http://localhost:7200/repositories/demo',\n    'http://localhost:8890/sparql',\n    'http://localhost:8082/bigdata/sparql',\n    // 'https://query.wikidata.org/sparql',\n    // 'https://sparql.uniprot.org/sparql/',\n    // 'http://dbtune.org/bbc/peel/cliopatria/sparql',\n    // 'https://semantic.eea.europa.eu/sparql',\n    // 'http://void.rkbexplorer.com/sparql/',\n  ]\n\n    // const sparqlEndointList = [\n    //   { title: 'DBpedia Virtuoso', value: 'http://dbpedia.org/sparql' },\n    //   { title: 'Bio2RDF Virtuoso', value: 'https://bio2rdf.org/sparql' },\n    //   { title: 'NCATS Translator TReK', value: 'https://graphdb.dumontierlab.com/repositories/trek' },\n    //   { title: 'NCATS Translator TReK', value: 'https://graphdb.dumontierlab.com/repositories/ncats-red-kg' },\n    //   { title: 'Bio2RDF v5', value: 'https://graphdb.dumontierlab.com/repositories/bio2rdf-ammar' },\n    // ]\n\n  const example_search_graphdb = \"PREFIX luc: <http://www.ontotext.com/owlim/lucene#>\\nSELECT ?foundUri ?foundLabel {\\n    ?foundLabel luc:searchIndex '$TEXT_TO_SEARCH*' ;\\n    luc:score ?score .\\n    ?foundUri ?p ?foundLabel .\\n} ORDER BY ?score LIMIT 200\";\n  const example_search_virtuoso = \"SELECT ?foundUri ?foundLabel WHERE {\\n    ?foundUri <http://www.w3.org/2000/01/rdf-schema#label> ?foundLabel .\\n    ?foundLabel bif:contains '$TEXT_TO_SEARCH' .\\n} LIMIT 200\";\n  const example_search_default = \"SELECT ?foundUri ?foundLabel WHERE {\\n    ?foundUri ?p ?foundLabel .\\n    VALUES ?p {<http://www.w3.org/2000/01/rdf-schema#label> <https://w3id.org/biolink/vocab/name>} .\\n    FILTER(isLiteral(?foundLabel))\\n    FILTER contains(?foundLabel, '$TEXT_TO_SEARCH')\\n} LIMIT 5\";\n\n  React.useEffect(() => {\n    // Reset state\n    // updateState({describe_results: {}})\n    // updateState({search_results: {}})\n    // updateState({isLoading: true})\n\n    // Get URL params \n    // const params = new URLSearchParams(location.search + location.hash);\n\n    // let describe_uri = params.get('uri');\n    let describe_endpoint = '';\n    let search_query = '';\n\n    // Get sparql_endpoint from cookie intothegraphSettings\n    const localStorageConfig = localStorage.getItem(\"intothegraphSettings\");\n    if (localStorageConfig) {\n      let configState: any = JSON.parse(localStorageConfig);\n      updateState({\n        describe_endpoint: configState.sparql_endpoint,\n        search_query: configState.search_query,\n        search_query_autocomplete: configState.search_query_autocomplete,\n      })\n    }\n  }, [])\n  // }, [context])\n\n  return (<Container className='mainContainer'>\n    <form onSubmit={(event) => {\n      handleSubmit(event)}}>\n        <FormControl className={classes.settingsForm} style={{ width: '60ch', textAlign: 'left' }}>\n          {/* Use width to have it approximatelly the size of 60 characters  */}\n          <Typography variant=\"h5\" className={classes.paperTitle} style={{ textAlign: 'center' }}>\n            Settings\n          </Typography>\n          <FormHelperText style={{ textAlign: 'center' }}>Stored in a cookie 🍪</FormHelperText>\n\n          {/* Autocomplete to define the SPARQL endpoint URL */}\n          {/* <InputLabel id=\"autocomplete-sparql-endpoint-label\">\n            🔗 SPARQL endpoint URL\n          </InputLabel> */}\n          <Typography variant=\"body1\">\n            🔗 SPARQL endpoint URL\n          </Typography>\n          <Autocomplete\n            onChange={handleAutocompleteSparqlEndpoint}\n            onInputChange={handleAutocompleteSparqlEndpoint}\n            // onChange={handleAutocomplete(event, 'sparql_endpoint')}\n            // onInputChange={handleAutocomplete(event, 'sparql_endpoint')}\n            id=\"autocomplete-sparql-endpoint\"\n            options={sparqlEndointList}\n            // value={state.describe_endpoint}\n            freeSolo={true}\n            includeInputInList={true}\n            ListboxProps={{\n              className: classes.alignLeft,\n            }}\n            renderInput={params => <TextField {...params} \n            label=\"SPARQL endpoint URL\" \n            variant=\"outlined\" \n            // getOptionLabel={option => option.title}\n            // style={{ width: '60ch' }}\n            // size='small'\n            />}\n          />\n        {/* <FormHelperText id=\"helper-sparql-endpoint\">SPARQL endpoint URL</FormHelperText> */}\n\n        <Typography variant=\"body1\">\n          🏷️ Metadata endpoint URL\n        </Typography>\n        <Autocomplete\n          onChange={handleAutocompleteMetadataEndpoint}\n          onInputChange={handleAutocompleteMetadataEndpoint}\n          // onChange={handleAutocomplete(event, 'sparql_endpoint')}\n          // onInputChange={handleAutocomplete(event, 'sparql_endpoint')}\n          id=\"autocomplete-metadata-endpoint\"\n          options={[\n            'https://graphdb.dumontierlab.com/repositories/trek',\n          ]}\n          // value={state.describe_endpoint}\n          freeSolo={true}\n          includeInputInList={true}\n          ListboxProps={{\n            className: classes.alignLeft,\n          }}\n          renderInput={params => <TextField {...params} \n          label=\"Metadata endpoint URL\" \n          variant=\"outlined\" \n          // getOptionLabel={option => option.title}\n          // style={{ width: '60ch' }}\n          // size='small'\n          />}\n        />\n\n        {/* Dropdown to choose search query */}\n        {/* <FormControl variant=\"outlined\" className={classes.fullWidth}> */}\n        {/* <InputLabel id=\"autocomplete-search-query-label\">\n          Search query\n        </InputLabel> */}\n        {/* <FormHelperText>🔎 Search query</FormHelperText> */}\n        <Typography variant=\"body1\">\n          🔎 Search query\n        </Typography>\n        <Autocomplete\n            onChange={handleAutocompleteSearchQuery}\n            onInputChange={handleAutocompleteSearchQuery}\n            // onChange={handleAutocomplete(event, 'sparql_endpoint')}\n            // onInputChange={handleAutocomplete(event, 'sparql_endpoint')}\n            id=\"autocomplete-search-query\"\n            options={[\n              'Generic search query',\n              'Optimized search in Virtuoso',\n              'Optimized search in Ontotext GraphDB',\n              'Define a custom search query',\n            ]}\n            // value={state.search_query_autocomplete}\n            freeSolo={false}\n            ListboxProps={{\n              className: classes.alignLeft,\n            }}\n            renderInput={params => <TextField {...params} \n            label=\"Search query\" \n            variant=\"outlined\" \n            // getOptionLabel={option => option.title}\n            // style={{ width: '60ch' }}\n            // size='small'\n            />}\n          />\n        {/* <Select\n          labelId=\"form-graph-overview-label\"\n          label=\"Search query\"\n          // TODO: import from localStorage\n          defaultValue='generic'\n          // inputRef={this.formGraphsOverview}\n          // MenuProps={{\n          //   className: classes.fullWidth,\n          // }}\n          // SelectDisplayProps={{\n          //   className: classes.smallerFont,\n          //   style: {width: '100%'}\n          // }}\n          // InputProps={{\n          //   className: classes.smallerFont,\n          //   // style: {width: '100%'}\n          // }}\n          autoWidth\n        >\n          <MenuItem value=\"generic\">Generic search query</MenuItem>\n          <MenuItem value=\"virtuoso\">Optimized search in Virtuoso</MenuItem>\n          <MenuItem value=\"graphdb\">Optimized search in Ontotext GraphDB</MenuItem>\n          <MenuItem value=\"custom\">Define a custom search query</MenuItem>\n        </Select> */}\n        {/* </FormControl> */}\n\n\n        {/* <FormControl variant=\"outlined\" \n          className={classes.fullWidth}\n          >\n          <InputLabel id=\"form-graph-overview-label\">\n            Graphs overview query type\n          </InputLabel>\n          <Select\n            labelId=\"form-graph-overview-label\"\n            label=\"Graphs overview query type\"\n            defaultValue={triplestore.graphs_overview}\n            inputRef={this.formGraphsOverview}\n            // MenuProps={{\n            //   className: classes.fullWidth,\n            // }}\n            // SelectDisplayProps={{\n            //   className: classes.smallerFont,\n            //   style: {width: '100%'}\n            // }}\n            InputProps={{\n              className: classes.smallerFont,\n              // style: {width: '100%'}\n            }}\n            autoWidth\n          >\n            <MenuItem value=\"hcls\">HCLS descriptive metadata</MenuItem>\n            <MenuItem value=\"all\">Get all graphs (optimized in Virtuoso)</MenuItem>\n          </Select>\n        </FormControl>\n        <FormHelperText id=\"helper-graphs-overview\">2 possibilities: \"hcls\" gets only graphs described using HCLS metadata and \"all\" get all graphs (optimized in Virtuoso)</FormHelperText>\n        <FormControl variant=\"outlined\" \n          className={classes.fullWidth}\n          >\n          <InputLabel id=\"form-graph-uri-resolution-label\">\n            Resolution of Graph URIs\n          </InputLabel>\n          <Select\n            labelId=\"form-graph-uri-resolution-label\"\n            label=\"Resolution of Graph URIs\"\n            defaultValue={triplestore.graph_uri_resolution}\n            inputRef={this.formGraphUriResolution}\n            // MenuProps={{\n            //   className: classes.fullWidth,\n            // }}\n            // SelectDisplayProps={{\n            //   className: classes.smallerFont,\n            //   style: {width: '100%'}\n            // }}\n            InputProps={{\n              className: classes.smallerFont,\n              // style: {width: '100%'}\n            }}\n            autoWidth\n          >\n            <MenuItem value=\"classes\">Show only classes in the graph</MenuItem>\n            <MenuItem value=\"triples\">Show all triples in the graph (LDP, Nanopubs)</MenuItem>\n          </Select>\n        </FormControl>\n        <FormHelperText id=\"helper-graph-uri-resolution\">What is shown when resolving a URI as a graph</FormHelperText>\n      </Paper>\n      <Paper elevation={2} className={classes.paperPadding}>\n        <Typography variant=\"h5\" className={classes.paperTitle}>\n          Search query\n        </Typography>\n        <FormHelperText>\n          Change here the SPARQL query used when searching in the navbar search box. \n          Use $TEXT_TO_SEARCH to define where the text to search will be replaced in the query.\n          It should return a ?foundUri and a ?foundLabel to be displayed by the app.\n        </FormHelperText>\n        <TextField\n          id=\"textfield-search-query\"\n          label=\"Search query used by the app\"\n          placeholder=\"Search query used by the app\"\n          className={classes.fullWidth}\n          defaultValue={triplestore.search_query}\n          variant=\"outlined\"\n          inputRef={this.formSearchQuery}\n          multiline={true}\n          // size='small'\n          InputProps={{\n            className: classes.normalFont\n          }}\n          InputLabelProps={{\n            className: classes.normalFont\n          }}\n        />\n        <FormHelperText>\n          You can use those examples queries to use GraphDB or Virtuoso Search Index (it needs to have been enabled in the triplestore before):\n        </FormHelperText>\n        <TextField \n          className={classes.fullWidth}\n          id=\"search-graphdb\" \n          label=\"Search query for Ontotext GraphDB\" \n          variant=\"outlined\" multiline={true}\n          value={example_search_graphdb}\n          size='small'\n          InputProps={{\n            className: classes.smallerFont\n          }}\n          InputLabelProps={{\n            className: classes.smallerFont\n          }}\n        />\n        <TextField \n          className={classes.fullWidth}\n          id=\"search-virtuoso\" \n          label=\"Search query for OpenLink Virtuoso\" \n          variant=\"outlined\" multiline={true}\n          value={example_search_virtuoso}\n          size='small'\n          InputProps={{\n            className: classes.smallerFont\n          }}\n          InputLabelProps={{\n            className: classes.smallerFont\n          }}\n        />\n      <TextField \n          className={classes.fullWidth}\n          id=\"search-default\" \n          label=\"Default search query\" \n          variant=\"outlined\" multiline={true}\n          value={example_search_default}\n          size='small'\n          InputProps={{\n            className: classes.smallerFont\n          }}\n          InputLabelProps={{\n            className: classes.smallerFont\n          }}\n        />\n      </Paper>\n      <Paper elevation={2} className={classes.paperPadding}>\n        <Typography variant=\"h5\" className={classes.paperTitle}>\n          Interfaces\n        </Typography>\n        <Autocomplete\n          onChange={this.handleAutocomplete.bind(this, 'openapi_url')}\n          onInputChange={this.handleAutocomplete.bind(this, 'openapi_url')}\n          id=\"autocomplete-openapi-url\"\n          options={openapiList}\n          value={this.context.triplestore.openapi_url}\n          freeSolo={true}\n          includeInputInList={true}\n          ListboxProps={{\n            className: classes.alignLeft,\n          }}\n          renderInput={params => <TextField {...params} \n          label=\"Reasoner API URL\"\n          variant=\"outlined\" \n          // getOptionLabel={option => option.title}\n          // style={{ width: 300 }}\n          // size='small'\n          />}\n        />\n        <FormHelperText id=\"helper-graphs-overview\">URL to the OpenAPI UI to perform Reasoner API queries and RESTful queries to explore the SPARQL endpoint (require a RDF Knowledge graph compliant with the BioLink model)</FormHelperText>\n        <Autocomplete\n          onChange={this.handleAutocomplete.bind(this, 'comunica_url')}\n          onInputChange={this.handleAutocomplete.bind(this, 'comunica_url')}\n          id=\"autocomplete-comunica-url\"\n          options={comunicaList}\n          value={this.context.triplestore.comunica_url}\n          freeSolo={true}\n          includeInputInList={true}\n          ListboxProps={{\n            className: classes.alignLeft,\n          }}\n          renderInput={params => <TextField {...params} \n          label=\"Comunica widget URL (Archives)\"\n          variant=\"outlined\" \n          />}\n        />\n        <FormHelperText id=\"helper-graphs-overview\">URL to the Comunica widget to expose a Triple Pattern Fragment server to query archives.</FormHelperText>\n        <Autocomplete\n          onChange={this.handleAutocomplete.bind(this, 'filebrowser_url')}\n          onInputChange={this.handleAutocomplete.bind(this, 'filebrowser_url')}\n          id=\"autocomplete-filebrowser-url\"\n          options={filebrowserList}\n          value={this.context.triplestore.filebrowser_url}\n          freeSolo={true}\n          includeInputInList={true}\n          ListboxProps={{\n            className: classes.alignLeft,\n          }}\n          renderInput={params => <TextField {...params} \n          label=\"Filebrowser URL to download RDF dumps\"\n          variant=\"outlined\" \n          />}\n        />\n        <FormHelperText id=\"helper-graphs-overview\">URL to the filebrowser to download RDF data dumps of the different graphs (needs to be manually exported at the moment)</FormHelperText> */}\n        <Button type=\"submit\"\n        variant=\"contained\" \n        // className={classes.saveButton} \n        // startIcon={<Icon>save</Icon>}\n        color=\"primary\" >\n          <SaveIcon />&nbsp;Save settings\n        </Button>\n        {/* <Button\n        variant=\"contained\" size=\"small\" \n        className={classes.saveButton} \n        onClick={this.confirmDeleteCache}\n        startIcon={<Icon>delete</Icon>}\n        color=\"secondary\" >\n          Delete cache\n        </Button> */}\n        <Snackbar open={state.open} onClose={handleClose} autoHideDuration={3000}>\n          {/* <Alert severity=\"success\">\n            Settings has been saved\n          </Alert> */}\n        </Snackbar>\n      </FormControl>\n    </form>\n    {/* <Dialog\n      open={this.state.dialogOpen}\n      onClose={this.handleDialogClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{\"Delete the cache?\"}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          This will delete the cache containing your current settings.<br/>\n          This can help resolve issues related to the cache.\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={this.doDeleteCache} color=\"secondary\">\n          Delete cache\n        </Button>\n        <Button onClick={this.handleDialogClose} color=\"primary\" autoFocus>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog> */}\n  </Container>\n  );\n}\n\n// Turgay snippet:\n// state ={\n//   number: 5,\n//   data: []\n// }\n// The component has been loaded\n// componentDidMount() {\n//   this.x =6\n//   setInterval(()=> {\n//     const {x, state: { data, number }} = this;\n//     console.log(x, data, number)\n//     //const data = this.state.data;\n//     data.push(number)\n//     this.setState({data})\n//   }, 1000)\n// }\n// render() {\n//   const { state: { number, data }} = this;\n//   return (\n//     <div className=\"Sparql\">\n//       <p>\n//         This is the {number} sparql me page. \n//       </p>\n//       {\n//         data.map(val => <p>{val}</p>)\n//       }\n//     </div>\n//   );\n// }","import React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Toolbar, Button, Paper, InputBase, IconButton, Popper, ClickAwayListener, Typography } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ExploreIcon from '@material-ui/icons/Explore';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport AppContext from \"./Context\";\nimport Settings from \"./Settings\";\n\n// import iconImage from '../../assets/icon.png';\n\n// import { AuthButton, Value } from '@solid/react';\n\nconst useStyles = makeStyles(theme => ({\n  menuButton: {\n    color: theme.palette.common.white,\n    margin: theme.spacing(1, 1),\n  },\n  solidButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    borderRadius: '6px',\n    // boxShadow: '0 4px 6px rgba(50, 50, 93, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08)',\n    padding: '7px 14px',\n    '&:hover': {  \n      backgroundColor: theme.palette.primary.dark,\n      cursor: 'pointer'\n    }\n  },\n  linkButton: {\n    textTransform: 'none',\n    textDecoration: 'none',\n  },\n  linkLogo: {\n    // Seems to fit the 48px navbar height...\n    // height: '48px',\n    alignItems: 'center',\n    display: 'flex',\n  },\n  paperPadding: {\n    padding: theme.spacing(2, 2),\n    margin: theme.spacing(2, 2),\n  },\n  // Search box\n  paperSearch: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    // 50% of top appbar\n    width: `40%`,\n  },\n  searchInput: {\n    marginLeft: theme.spacing(1),\n    // Hardcoded width for search input\n    width: '50%',\n    fontSize: '14px',\n    flex: 1,\n  },\n  iconButton: {\n    padding: 5,\n  },\n}))\n  \nexport default function NavBar() {\n  const classes = useStyles();\n\n  // const [context, setContext] = React.useContext(AppContext);\n  // setContext(\"New Value\")\n\n  const [state, setState] = React.useState({\n    solid_webid: '',\n    search_text: '',\n    describe_uri: '',\n    describe_endpoint: '',\n    // settings_open: false\n  });\n\n  // Popper for settings\n  const [open, setOpen] = React.useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClick = (event: any) => {\n    console.log('Click button!');\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n    setOpen((prev) => !prev);\n  };\n  const handleClickAway = () => {\n    setOpen(false);\n    setAnchorEl(anchorEl ? null : anchorEl);\n    console.log('Click away!');\n  };\n  const id = open ? 'simple-popper' : undefined;\n\n  // Avoid conflict when async calls\n  const stateRef = React.useRef(state);\n  const updateState = React.useCallback((update) => {\n    stateRef.current = {...stateRef.current, ...update};\n    setState(stateRef.current);\n  }, [setState]);\n\n  let history = useHistory();\n\n  // const appContext = React.useContext(AppContext);\n\n  function submitSearch(event: any) {\n    event.preventDefault();\n    history.push('/describe?uri=' + state.search_text)\n    // Hard reload of the page: location.reload();\n  }\n\n  function handleChange(event: any) {\n    updateState({search_text: event.target.value});\n  }\n\n  return (\n    <AppBar title=\"\" position='static'>\n      <Toolbar variant='dense'>\n        <Link to=\"/\" className={classes.linkButton}>\n          {/* <img src={iconImage} style={{height: '2em', width: '2em', marginRight: '10px'}} alt=\"Logo\" /> */}\n          <Tooltip title='Into the Graph homepage'>\n            <Button className={classes.menuButton}>\n              <ExploreIcon />&nbsp;Into the graph\n            </Button>\n          </Tooltip>  \n        </Link>\n        <Link to=\"/describe?uri=http://bio2rdf.org/clinicaltrials:NCT00209495\" className={classes.linkButton}>\n          <Tooltip title='Describe an URI in a SPARQL endpoint'>\n            <Button className={classes.menuButton}>\n              <SearchIcon />&nbsp;Describe URI\n            </Button>\n          </Tooltip>\n        </Link>\n        <div className=\"flexGrow\"></div>\n        {/* <Tooltip title='Go to IDS Best Practices documentation'>\n          <Button className={classes.menuButton} target=\"_blank\"\n          href=\"https://maastrichtu-ids.github.io/best-practices\" rel=\"noopener noreferrer\">\n            <MenuBookIcon />\n          </Button>\n        </Tooltip> */}\n        <Paper component=\"form\" className={classes.paperSearch}\n          onSubmit={submitSearch}\n        >\n          <InputBase  // https://material-ui.com/api/input-base/\n            className={classes.searchInput}\n            // placeholder=\"Search SPARQL endpoint\"\n            placeholder={\"Search\"}\n            onChange={handleChange}\n            inputProps={{ 'aria-label': 'search' }}\n            // fullWidth={true}\n          />\n          <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\n            <SearchIcon />\n          </IconButton>\n        </Paper>\n        {/* <ClickAwayListener onClickAway={handleClickAway}> */}\n          {/* Nice popper example: https://stackoverflow.com/questions/55143914/material-ui-clickawaylistener-close-when-clicking-itself */}\n          {/* <div> */}\n          <Tooltip  title='Application settings'>\n            <Button className={classes.menuButton} onClick={handleClick}>\n              <SettingsIcon />\n            </Button>\n          </Tooltip>\n          <Popper open={open} anchorEl={anchorEl}>\n            <ClickAwayListener onClickAway={handleClickAway}>\n              <Paper elevation={4} className={classes.paperPadding}>\n                <Settings />\n              </Paper>\n            </ClickAwayListener>\n          </Popper>\n          {/* </div> */}\n        {/* </ClickAwayListener> */}\n        <Tooltip  title='Go to https://github.com/MaastrichtU-IDS/into-the-graph'>\n          <Button className={classes.menuButton} target=\"_blank\"\n          href=\"https://github.com/MaastrichtU-IDS/into-the-graph\" rel=\"noopener noreferrer\">\n            <GitHubIcon />\n          </Button>\n        </Tooltip>\n        {/* <AuthButton title='Login with SOLID' className={classes.solidButton} popup=\"https://inrupt.net/common/popup.html\"/> */}\n      </Toolbar>\n    </AppBar>\n  );\n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles(theme => ({\n  darkLink: {\n    textDecoration: 'none',\n    color: 'inherit',\n    '&:hover': {\n      color: theme.palette.primary.light,\n      textDecoration: 'none',\n    },\n  },\n  whiteLink: {\n    textDecoration: 'none',\n    color: 'inherit',\n    '&:hover': {\n      color: theme.palette.primary.dark,\n      textDecoration: 'none',\n    },\n  },\n  footer: {\n    padding: theme.spacing(2),\n    marginTop: 'auto',\n    color: 'white',\n    backgroundColor: theme.palette.primary.main,\n  },\n}));\n\nfunction Copyright() {\n  const classes = useStyles();\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <a className={classes.darkLink} target=\"_blank\" rel=\"noopener noreferrer\"\n      href=\"https://maastrichtuniversity.nl/ids\">\n        Institute of Data Science at Maastricht University\n      </a>{' '}\n      {'2020.'}\n    </Typography>\n  );\n}\n\nexport default function Footer() {\n  const classes = useStyles();\n  // Set state in functional style:\n  // const [state, setState] = React.useState({search: '', name: 'Vincent'});\n  // console.log(state.search);\n  // // Set search without chaging name\n  // setState({...state, search: 'yo'})\n  // const onNameChange = React.useCallback((filterName) => {\n  //   console.log('callback', state.name);\n  // },\n  // [state.name]);\n  // // Tells callback to reload when change to state.name\n\n  // React.useEffect(() => {\n  //   console.log('componentDID mount');\n  //   return () => {\n  //     console.log('willMount');\n  //   }\n  // }, []) \n  // Empty dep list: will only run when componentDidMount\n\n  return (\n      <footer className={classes.footer}>\n        <Container maxWidth=\"md\" style={{textAlign: 'center'}}>\n          <Typography variant=\"body2\" >\n            This website is licensed under the&nbsp;\n            <a className={classes.whiteLink} target=\"_blank\" rel=\"noopener noreferrer\"\n            href=\"https://github.com/MaastrichtU-IDS/into-the-graph/blob/main/LICENSE\">\n              MIT license\n            </a>\n            <br/>License of the displayed data is defined by the SPARQL endpoint provider\n            {/* <img src={require('../assets/images/mit_license.png')} /> */}\n          </Typography>\n          <Copyright />\n        </Container>\n      </footer>\n  );\n}","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Typography, Container, Box, Button, Chip, Tooltip, Grid, Paper } from \"@material-ui/core\";\n// import { data } from \"@solid/query-ldflex\";\n// import data from \"@solid/query-ldflex\";\n\n// import { LoggedIn, LoggedOut, Value, useWebId } from '@solid/react';\n\n// import { Like } from '@solid/react';\n// import SolidStar from \"./SolidStar\";\n\n// import {newEngine} from '@comunica/actor-init-sparql';\n// import {ActorInitSparql} from '@comunica/actor-init-sparql/lib/ActorInitSparql-browser';\n// import {IQueryOptions, newEngineDynamicArged} from \"@comunica/actor-init-sparql/lib/QueryDynamic\";\n\nconst useStyles = makeStyles(theme => ({\n  margin: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    // textAlign: 'center',\n  },\n  paperSearch: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: '30%',\n  },\n  searchInput: {\n    marginLeft: theme.spacing(1),\n    width: '50%',\n    fontSize: '14px',\n    flex: 1,\n  },\n  link: {\n    textDecoration: 'none',\n    textTransform: 'none',\n    color: theme.palette.primary.main,\n    '&:hover': {\n      color: theme.palette.secondary.main,\n      textDecoration: 'none',\n    },\n  },\n  paperPadding: {\n    padding: theme.spacing(2, 2),\n    margin: theme.spacing(2, 2),\n  },\n  cardSubtitle: {\n    fontSize: 14,\n    marginTop: 8,\n  },\n  pos: {\n    // marginBottom: 12,\n  },\n}))\n\nexport default function Homepage() {\n  const classes = useStyles();\n  const theme = useTheme();\n  \n  const [state, setState] = React.useState({\n    webid: '',\n    projects_list: [],\n    search: '',\n    repositories_hash: {},\n    category_pie: {}\n  });\n\n  const stateRef = React.useRef(state);\n\n  // Avoid conflict when async calls\n  // Can be done with another lib (cf. Turgay)\n  const updateState = React.useCallback((update) => {\n    stateRef.current = {...stateRef.current, ...update};\n    setState(stateRef.current);\n  }, [setState]);\n\n  // useLocation hook to get SOLID WebID\n  // let solid_webid = useWebId();\n\n\n  // function createEmptyDocument() {\n  //   // const location = \"/public/into-the-graph/preferences.ttl\";\n  //   const webId = useWebId();\n  //   // console.log(\"webId!!\");\n  //   // console.log(webId);\n  //   // return data[webId + location].put();\n  // }\n\n  // async function WebIdStatus() {\n  //   updateState({webid: useWebId()})\n  //   // const webId = useWebId();\n  //   // .replace(\"profile/card#me\", \"public/into-the-graph/preferences.ttl\");\n  //   // const location = webId.replace(\"profile/card#me\", \"public/into-the-graph/preferences.ttl\");\n  //   // return data[webId + location].put();\n  //   return <span>Preferences stored at {webId}.</span>;\n  // }\n\n  // TODO: fix to use webid hook\n  // async function createEmptyDocument(location: any) {\n  //   // webId.replace(\"profile/card#me\", \"public/into-the-graph/preferences.ttl\");\n  //   return data[location].put();\n  // }\n  \n\n  // componentDidMount\n  React.useEffect(() => {\n    // console.log('solid_webid');\n    // console.log(solid_webid);\n\n    // Check SOLID pod for a user preferences file\n    // https://github.com/solid/react-components/blob/master/demo/app.jsx\n    // https://solid.github.io/react-components/\n\n  }, [])  \n  // This useless array needs to be added for React to understand he needs to use the state inside...\n\n  // }, [solid_webid])\n  // Trying out the SOLID webId hook\n\n  return(\n    <Container className='mainContainer'>\n      <Typography variant=\"h4\" className={classes.margin} style={{marginBottom: theme.spacing(4) }}>\n        🧭 Into the Graph\n        {/* <img src={idsLogo} style={{maxWidth: '200px'}} alt=\"IDS Logo\" /> */}\n      </Typography>\n\n      <Paper elevation={4} className={classes.paperPadding}>\n        <Typography variant=\"body1\" className={classes.margin}>\n          Provide the <b>URI to describe</b>, and the <b>SPARQL endpoint</b> queried in the URL parameters, such as:\n        </Typography>\n\n        <Typography variant=\"h5\" className={classes.margin}>\n          <Link to={{\n            pathname: '/describe',\n            search: '?uri=http://bio2rdf.org/clinicaltrials:NCT00209495&endpoint=https://bio2rdf.org/sparql',\n          }} className={classes.link}>\n            /describe?uri=http://bio2rdf.org/clinicaltrials:NCT00209495&endpoint=https://bio2rdf.org/sparql\n          </Link>\n        </Typography>\n      </Paper>\n\n      <Typography variant=\"body1\" className={classes.margin} style={{textAlign: 'left', marginTop: theme.spacing(5) }}>\n        <b>Into the Graph</b> provides a simple RDF web browser that just need a SPARQL endpoint URL to resolve URIs, and explore the available linked data.\n      </Typography>\n      \n      <Typography variant=\"body1\" className={classes.margin} style={{ textAlign: 'left' }}>\n        This linked data browser features:\n        <br/>🔎 A web-based UI to browse any SPARQL endpoints content easily\n        <br/>🕸️ Native support for graphs (nquads)\n        <br/>🏗️ Work in progress: visualize and browse concepts using <a href='https://perfectgraph-5c619.web.app' target='_blank' rel=\"noopener noreferrer\"><code>perfect-graph</code></a>\n        <br/>🚧 Work in progress: insights about the content of the triplestore and its different graphs, using precomputed HCLS descriptives statistics\n      </Typography>\n\n\n      <Typography variant=\"body1\" className={classes.margin} style={{textAlign: 'left'}}>\n        Other relevant libraries:\n      </Typography>\n      <ul style={{textAlign: 'left'}}>\n        <li><Typography variant=\"body1\">\n          <a href='https://github.com/micheldumontier/torres-api-platform/' className={classes.link} target='_blank' rel=\"noopener noreferrer\">TORRES API platform</a> to store HCLS descriptive metadata for your dataset\n        </Typography></li>\n        <li><Typography variant=\"body1\">\n          <a href='https://github.com/MaastrichtU-IDS/fair-metadata' className={classes.link} target='_blank' rel=\"noopener noreferrer\">FAIR metadata</a> python lib: to generate HCLS descriptive metadata for your dataset\n        </Typography></li>\n        <li><Typography variant=\"body1\">\n          <a href='https://github.com/MaastrichtU-IDS/d2s-project-template/tree/master/datasets/preppi' className={classes.link} target='_blank' rel=\"noopener noreferrer\">Data2Services workflows</a> to generate RDF knowledge graphs from structured data using RML (RDF Mapping Language)\n        </Typography></li>\n      </ul>\n\n      {/* <LoggedIn>\n        <Typography style={{textAlign: 'center', marginBottom: '20px'}}>\n          Welcome <Value src=\"user.name\"/>!\n        </Typography>\n        <Typography style={{textAlign: 'center', marginBottom: '20px'}}>\n          Soon you will be able to use your SOLID account! \n        </Typography>\n      </LoggedIn>\n      <LoggedOut>\n        <Typography style={{textAlign: 'center', marginBottom: '20px'}}>\n          Welcome\n        </Typography>\n      </LoggedOut> */}\n\n    </Container>\n  )\n}\n\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\n// var Config = require('Config')\n\nconst useStyles = makeStyles(theme => ({\n  uriLink: {\n    textDecoration: 'none',\n    color: 'rgba(0, 0, 0, 0.87)',\n    '& :hover': {\n      color: theme.palette.primary.main,\n    },\n    overflowWrap: 'break-word'\n  }\n}));\n\n\n// Format a link to be displayedby shortening URI\nexport default function LinkDescribe(props: any) {\n  const classes = useStyles();\n\n  // TODO: improve, use centralized service? (prefixcommons/prefix.cc)\n  const prefixRegistry: any = {\n    \"rdf\":         \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n    \"rdfs\":        \"http://www.w3.org/2000/01/rdf-schema#\",\n    \"owl\":         \"http://www.w3.org/2002/07/owl#\",\n    \"skos\":        \"http://www.w3.org/2004/02/skos/core#\",\n    \"dc\":          \"http://purl.org/dc/elements/1.1/\",\n    \"dct\":         \"http://purl.org/dc/terms/\",\n    \"dctypes\":     \"http://purl.org/dc/dcmitype/\",\n    \"bl\":          \"https://w3id.org/biolink/vocab/\",\n    \"biolink\":     \"http://w3id.org/biolink/vocab/\",\n    \"d2s\":         \"https://w3id.org/d2s/\",\n    \"omop\":        \"http://api.ohdsi.org/WebAPI/vocabulary/concept/\",\n    \"cohd\":        \"https://w3id.org/trek/cohd/\",\n    \"bio2rdf\":     \"http://bio2rdf.org/\",\n    \"dbo\":         \"http://dbpedia.org/ontology/\",\n    \"dbp\":         \"http://dbpedia.org/property/\",\n    \"wd\":          \"http://www.wikidata.org/entity/\",\n    \"wdt\":         \"http://www.wikidata.org/prop/direct/\",\n    \"foaf\":        \"http://xmlns.com/foaf/0.1/\",\n    \"idot\":        \"http://identifiers.org/idot/\",\n    \"dcat\":        \"http://www.w3.org/ns/dcat#\",\n    \"void\":        \"http://rdfs.org/ns/void#\",\n    \"void-ext\":    \"http://ldf.fi/void-ext#\",\n    \"obo\":         \"http://purl.obolibrary.org/obo/\",\n    \"ncit\":        \"http://ncicb.nci.nih.gov/xml/owl/EVS/Thesaurus.owl#\",\n    \"xsd\":         \"http://www.w3.org/2001/XMLSchema#\",\n    \"schema\":      \"http://schema.org/\",\n    \"cito\":        \"http://purl.org/spar/cito/\",\n    \"prov\":        \"http://www.w3.org/ns/prov#\",\n    \"pav\":         \"http://purl.org/pav/\",\n    \"pplan\":       \"http://purl.org/net/p-plan#\",\n    \"np\":          \"http://www.nanopub.org/nschema#\",\n    \"npx\":         \"http://purl.org/nanopub/x/\",\n  };\n\n  function shortenUri(uriToShorten: string) {\n    for (const prefix in prefixRegistry) {\n      if (uriToShorten.startsWith(prefixRegistry[prefix])) {\n        return uriToShorten.replace(prefixRegistry[prefix], prefix + ':');\n      }\n    }\n    return uriToShorten;\n  }\n\n  if(/^(?:node[0-9]+)|((https?|ftp):.*)$/.test(props.uri)) {\n    // Process URIs\n    return (\n      <Link to={{\n        pathname: '/describe',\n        search: '?uri=' + props.uri,\n      }} className={classes.uriLink}>\n        <Typography variant={props.variant} className={props.passClass}\n        style={{overflowWrap: 'break-word'}}>\n          {shortenUri(props.uri)}\n        </Typography>\n      </Link>\n      // <a href={'/describe?uri=' + props.uri} className={classes.uriLink}>\n      //   <Typography variant={props.variant} className={props.passClass}\n      //   style={{overflowWrap: 'break-word'}}>\n      //     {shortenUri(props.uri)}\n      //   </Typography>\n      // </a>\n    )\n  }\n  return (\n    // For non URI\n    <Typography variant={props.variant} className={props.passClass} \n    style={{textAlign: 'left', overflowWrap: 'break-word'}}>\n      {props.uri}\n    </Typography>\n  )\n}","import React from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport { makeStyles,  useTheme } from '@material-ui/core/styles';\nimport { Typography, Container, Paper, Grid, CircularProgress, Button } from \"@material-ui/core\";\nimport axios from 'axios';\n\n// Official datatables.net docs\n// var $  = require( 'jquery' );\n// var dt = require( 'datatables.net' )();\n\n// Import from package.json install (from itg js)\nimport 'datatables.net-dt/css/jquery.dataTables.min.css'\n// import $ from 'jquery';\n\n// From https://medium.com/@zbzzn/integrating-react-and-datatables-not-as-hard-as-advertised-f3364f395dfa\nconst $ = require('jquery');\n\n$.DataTable = require('datatables.net');\n\nimport { Graph } from \"perfect-graph\";\nimport { ApplicationProvider } from 'unitx-ui'\n\nimport LinkDescribe from \"../components/LinkDescribe\";\nimport Context from \"../components/Context\";\n\n\nconst useStyles = makeStyles(theme => ({\n  margin: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    textAlign: 'center',\n  },\n  link: {\n    textDecoration: 'none',\n    textTransform: 'none',\n    color: theme.palette.primary.main,\n    '&:hover': {\n      color: theme.palette.secondary.main,\n      textDecoration: 'none',\n    },\n  },\n  fullWidth: {\n    width: '100%',\n  },\n  normalFont: {\n    fontSize: '14px',\n  },\n  smallerFont: {\n    fontSize: '12px',\n  },\n  alignLeft: {\n    textAlign: 'left'\n  },\n  paperPadding: {\n    padding: theme.spacing(2, 2),\n    // margin: theme.spacing(2, 2),\n  },\n  paperTitle: {\n    fontWeight: 300,\n    marginBottom: theme.spacing(1),\n  },\n  loadSpinner: {\n    padding: theme.spacing(10, 10)\n  },\n  datatable_text: {\n    wordBreak: 'break-word'\n  }\n}))\n\n\nexport default function Describe() {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const [state, setState] = React.useState({\n    describe_uri: '',\n    describe_endpoint: '',\n    describe_results: [],\n    search_results: [],\n    graph_data: {nodes: [], edges: []},\n    isLoading: true,\n    requestError: false\n  });\n  const stateRef = React.useRef(state);\n\n  // Avoid conflict when async calls\n  const updateState = React.useCallback((update) => {\n    stateRef.current = {...stateRef.current, ...update};\n    setState(stateRef.current);\n  }, [setState]);\n\n  // const [context, setContext]: any = React.useContext(Context);\n\n  // useLocation hook to get URL params\n  let location = useLocation();\n\n  // TODO: dont work to use Ref for datatables.net\n  // const datatableRef = React.useRef(null);\n  \n  // Build SPARQL query to describe a URI\n  function getDescribeQuery(uri_to_describe: any) {\n    var describe_query;\n    if(uri_to_describe.startsWith('node')) {\n      // Case it is a blank node in Ontotext GraphDB\n      // TODO: improve it\n      uri_to_describe = \"_:\" + uri_to_describe\n      describe_query = `SELECT DISTINCT ?subject ?predicate ?object ?graph WHERE {\n          GRAPH ?graph {\n            ` + uri_to_describe + ` ?predicate ?object .\n          }\n        } LIMIT 1000`\n    } else {\n      // Regular URI\n      uri_to_describe = \"<\" + uri_to_describe + \">\"\n      \n      // Define the query block that resolves graph URIs\n      // To returns only classes or all triples\n      var graphQuery = `SELECT * {\n        GRAPH ` + uri_to_describe + ` {\n          ?subject ?predicate ?object .\n          BIND(` + uri_to_describe + ` AS ?graph)\n        }\n      } LIMIT 1000`\n      // if (this.context.triplestore.graph_uri_resolution === \"classes\") {\n      //   // TODO: Add DISTINCT ? Might slow the query down in some cases\n      //   graphQuery = `SELECT * {\n      //     GRAPH ` + uri_to_describe + ` {\n      //       [] a ?object .\n      //       BIND(\"dummy subject\" AS ?subject)\n      //       BIND(\"dummy predicate\" AS ?predicate)\n      //     }\n      //   } LIMIT 1000`\n      // }\n\n      describe_query = `SELECT DISTINCT ?subject ?predicate ?object ?graph WHERE {\n        {\n          SELECT * {\n            GRAPH ?graph {\n              ` + uri_to_describe + ` ?predicate ?object .\n              BIND(` + uri_to_describe + ` AS ?subject)\n            }\n          } LIMIT 1000\n        } UNION {\n          SELECT * {\n            GRAPH ?graph {\n              ?subject ?predicate ` + uri_to_describe + ` .\n              BIND(` + uri_to_describe + ` AS ?object)\n            }\n          } LIMIT 1000\n        } UNION {\n          SELECT * {\n            GRAPH ?graph {\n              ?subject ` + uri_to_describe + ` ?object .\n              BIND(` + uri_to_describe + ` AS ?predicate)\n            }\n          } LIMIT 1000\n        } UNION {\n          ` + graphQuery + `\n        }\n      }`\n    }\n    return encodeURIComponent(describe_query);\n  }\n\n  function getSearchQuery(text_to_search: string) {\n    let search_query = ''\n    const localStorageConfig = localStorage.getItem(\"intothegraphSettings\");\n    if (localStorageConfig) {\n      let configState: any = JSON.parse(localStorageConfig);\n      search_query = configState.search_query;\n    }\n    if (!search_query) {\n      // Default search query, if no query in localStorage\n      search_query = `SELECT ?foundUri ?foundLabel WHERE {\n        ?foundUri ?p ?foundLabel .\n        VALUES ?p {<http://www.w3.org/2000/01/rdf-schema#label> <https://w3id.org/biolink/vocab/name>} .\n        FILTER(isLiteral(?foundLabel))\n        FILTER contains(?foundLabel, \"$TEXT_TO_SEARCH\")\n        } LIMIT 5`.replace('$TEXT_TO_SEARCH', text_to_search)\n    }\n\n    // if (text_to_search === \"\") {\n    //   // If no text provided, we use a default search query to get interesting concepts \n    //   search_query = `SELECT ?foundUri ?foundLabel WHERE {\n    //     ?foundUri a ?type ; ?p ?foundLabel .\n    //     VALUES ?p {<http://www.w3.org/2000/01/rdf-schema#label> <https://w3id.org/biolink/vocab/name>} .\n    //     FILTER(isLiteral(?foundLabel))\n    //     FILTER(isIRI(?foundUri))\n    //     } LIMIT 20`\n\n    //   // A custom default query can be set in settings.json\n    //   // let defaultSearchQuery = Config.default_search_query;\n    //   // if (defaultSearchQuery) {\n    //   //   searchQuery = defaultSearchQuery;\n    //   // } else {\n    //   //   // If no custom default_query defined in settings.json\n    //   //   searchQuery = `SELECT ?foundUri ?foundLabel WHERE {\n    //   //     ?foundUri a ?type ; ?p ?foundLabel .\n    //   //     VALUES ?p {<http://www.w3.org/2000/01/rdf-schema#label> <https://w3id.org/biolink/vocab/name>} .\n    //   //     FILTER(isLiteral(?foundLabel))\n    //   //     FILTER(isIRI(?foundUri))\n    //   //     } LIMIT 20`\n    //   // }\n    // // } else if (search_query) {\n    // //   // If defined in settings.json\n    // //   // Results are provided through ?foundUri and ?foundLabel\n    // //   // Use $TEXT_TO_SEARCH as search variable to replace\n    // //   searchQuery = searchQuery.replace('$TEXT_TO_SEARCH', text_to_search)\n    // }\n    // console.log('search_query generated');\n    // console.log(search_query);\n    return encodeURIComponent(search_query);\n  }\n\n  function convertStringToNumber(string_to_convert: string) {\n    let hash = 0, i, chr;\n    for (i = 0; i < string_to_convert.length; i++) {\n      chr   = string_to_convert.charCodeAt(i);\n      hash  = ((hash << 5) - hash) + chr;\n      hash |= 0; // Convert to 32bit integer\n    }\n    return hash;\n  }\n\n  // Run on start of the page\n  React.useEffect(() => {\n    // Reset state\n    updateState({describe_results: {}})\n    updateState({search_results: {}})\n    updateState({isLoading: true})\n\n    // Get URL params \n    const params = new URLSearchParams(location.search + location.hash);\n\n    let describe_uri = params.get('uri');\n    let describe_endpoint = params.get('endpoint');\n\n    // Get sparql_endpoint from cookie intothegraphSettings\n    if (!describe_endpoint) {\n      const localStorageConfig = localStorage.getItem(\"intothegraphSettings\");\n      if (localStorageConfig) {\n        let configState: any = JSON.parse(localStorageConfig);\n        describe_endpoint = configState.sparql_endpoint;\n      }\n    }\n\n    // console.log('context');\n    // console.log(context);\n    // if (!describe_endpoint && context.describe_endpoint) {\n    //   // Get endpoint from react Context\n    //   describe_endpoint = context.describe_endpoint;\n    // }\n\n    // TODO: handle default value somewhere else?\n    if (!describe_uri) {\n      describe_uri = 'http://bio2rdf.org/clinicaltrials:NCT00209495';\n    }\n    if (!describe_endpoint) {\n      describe_endpoint = 'https://bio2rdf.org/sparql';\n    }\n\n    updateState({describe_uri: describe_uri})\n    updateState({describe_endpoint: describe_endpoint})\n    // Context not propagating properly, using cookie localStorage instead\n    // setContext(describe_endpoint)\n\n    if(/^(?:node[0-9]+)|((https?|ftp):.*)$/.test(describe_uri)) {\n      // If URI provided\n      // console.log(getDescribeQuery(describe_uri));\n      axios.get(describe_endpoint + `?query=` + getDescribeQuery(describe_uri))\n        .then(res => {\n          const sparql_results_array = res.data.results.bindings;\n          console.log(sparql_results_array)\n          // console.log(sparql_results_array[0].subject.value)\n          updateState({describe_results: sparql_results_array})\n          updateState({isLoading: false})\n\n          $('#datatableRef').DataTable({\n            \"autoWidth\": false\n          });\n\n          let graph_nodes: any = {}\n          let graph_edges: any = []\n          let node_count = 1;\n\n          sparql_results_array.forEach((result_row: any) => {\n            // Add subject node to hash if not present\n            if (!(result_row.subject.value in graph_nodes)) {\n              // If not already in array\n              graph_nodes[result_row.subject.value] = {\n                id: result_row.subject.value,\n                position: { x: node_count * 100, y: node_count * 400 },\n                data: { uri: result_row.subject.value, color: 'red' },\n              };\n              node_count += 1;\n            }\n\n            // Add object node\n            if (!(result_row.object.value in graph_nodes)) {\n              // If not already in array\n              graph_nodes[result_row.object.value] = {\n                id: result_row.object.value,\n                position: { x: node_count * 80, y: node_count * 40 },\n                data: { uri: result_row.object.value, color: 'green' },\n              };\n              node_count += 1;\n            }\n\n            // Add edge between the 2 nodes\n            const edge_id = result_row.subject.value + result_row.predicate.value + result_row.object.value;\n            graph_edges.push({\n              id: edge_id,\n              source: result_row.subject.value,\n              target: result_row.object.value,\n              data: { uri: result_row.predicate.value, color: 'green' }\n            });\n            console.log(\"Graph nodes and edges\");\n            console.log(graph_nodes);\n            console.log(graph_edges);\n          })\n\n        // const graph_nodes_array = [];\n        // for(nodes in graph_nodes) {\n        //   graph_nodes_array.push(Number(o), ob[o]);\n        // }\n        const graph_nodes_array = Object.keys(graph_nodes).map(function(node_id){\n          return graph_nodes[node_id];\n        });\n\n        updateState({\n          graph_data: { nodes: graph_nodes_array, edges: graph_edges }\n        })\n        \n          // const table = $(datatableRef).find('table').DataTable();\n          // Getting error when using useRef\n          // Unhandled Rejection (TypeError): this.getAttribute is not a function\n          // let table = $('.data-table-wrapper').find('table').DataTable();\n\n          // sparqlResultArray.forEach((sparqlResultRow) => {\n        })\n\n    } else {\n      // Full text search if not URI\n      axios.get(describe_endpoint + `?query=` + getSearchQuery(describe_uri))\n        .then(res => {\n          const search_results_array = res.data.results.bindings;\n          updateState({search_results: search_results_array})\n          updateState({isLoading: false})\n          // let searchResults = [];\n          // sparqlResultArray.forEach((sparqlResultRow) => {\n          //   searchResults.push({\n          //     foundUri: sparqlResultRow.foundUri.value , \n          //     foundLabel: sparqlResultRow.foundLabel.value\n          //   })\n          // })\n        })\n        .catch(error => {\n          console.log(error)\n          updateState({ requestError: true });\n          updateState({ isLoading: false });\n        })\n    }\n\n  }, [location])\n\n\n  return(\n    <Container className='mainContainer'>\n      <Typography variant=\"body2\" className={classes.margin}>\n      {/* <Typography variant=\"body2\" style={{textAlign: 'center', marginBottom: '20px'}}> */}\n        {state.describe_endpoint}\n      </Typography>\n      <Typography variant=\"h5\" className={classes.margin}>\n        {state.describe_uri}\n      </Typography>\n\n      {state.isLoading && (\n        <CircularProgress className={classes.loadSpinner} />\n      )}\n\n      {/* Display a datatable with subject, predicate, object, graph retrieved */}\n      {state.describe_results.length > 0 && ( \n        // <table table=\"true\" ref={datatableRef}>\n        <Paper elevation={4} className={classes.paperPadding}>\n          <table id='datatableRef' style={{ wordBreak: 'break-all' }}>\n            <thead>\n              <tr>\n                <th>Subject</th>\n                <th>Predicate</th>\n                <th>Object</th>\n                <th>Graph</th>\n              </tr>\n            </thead>\n            <tbody>\n              {/* Iterate Describe query results array */}\n              {state.describe_results.map((row: any, key: number) => {\n                // return <Tooltip title={displayDescription(row.name, row.description)} key={key}>\n                return <tr key={key}>\n                    {/* <td><LinkDescribe uri={row.graph.value} variant='body2'/></td> */}\n                    <td><LinkDescribe variant='body2' uri={row.subject.value}/></td>\n                    <td><LinkDescribe variant='body2' uri={row.predicate.value}/></td>\n                    <td><LinkDescribe variant='body2' uri={row.object.value}/></td>\n                    <td><LinkDescribe variant='body2' uri={row.graph.value}/></td>\n                  </tr>\n                {/* </Tooltip>; */}\n              })}\n            </tbody>\n          </table>\n        </Paper>\n      )}\n\n      {/* Show results of full text search query */}\n      {state.search_results.length > 0 &&\n        <Paper elevation={4} className={classes.paperPadding}>\n            {state.search_results.map(function(searchResult: any, key: number){\n              return <Grid container spacing={2} alignItems=\"center\" key={key}>\n                <Grid item xs={6}>\n                  <Paper className={classes.paperPadding}>\n                    <LinkDescribe variant='body2' uri={searchResult.foundUri.value}/>\n                  </Paper>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography variant=\"body2\">{searchResult.foundLabel.value}</Typography>\n                </Grid>\n              </Grid>\n            })}\n        </Paper>\n      }\n\n      {/* Show error message (if request fails) */}\n      {state.requestError && (\n        <Paper elevation={2} className={classes.paperPadding}>\n          <Typography variant=\"body2\">\n            The request to the SPARQL endpoint failed, try to <a href=\"\" className={classes.link}>reload the page ♻️</a><br/>\n            Or&nbsp;<a href=\"https://addons.mozilla.org/fr/firefox/addon/cors-everywhere/\" className={classes.link} target='_blank' rel=\"noopener noreferrer\">\n              enable CORS requests</a> in your browser.\n          </Typography>\n        </Paper>\n      )}\n\n      {/* {!state.loadSpinner && ( */}\n      {/* {!state.requestError && !state.search_results && !state.describe_results && !state.loadSpinner && ( */}\n      {/* {console.log(state.search_results.length)} */}\n      {/* No results for URI resolution */}\n      {!state.requestError && !state.isLoading && state.describe_results.length < 1 && !state.search_results.length && (\n        <Paper elevation={2} className={classes.paperPadding}>\n          <Typography variant=\"body2\">\n            We could not find a match for your URI in the SPARQL endpoint.\n          </Typography>\n        </Paper>\n      )}\n\n      {/* No results for Search */}\n      {!state.requestError && !state.isLoading && state.search_results.length < 1 && !state.describe_results.length && (\n        <Paper elevation={2} className={classes.paperPadding}>\n          <Typography variant=\"body2\">\n            We could not find a match for your search in the SPARQL endpoint.\n          </Typography>\n        </Paper>\n      )}\n\n      {/* Iterate a JSON object: */}\n      {/* {Object.keys(state.repositories_hash).map(function(repo: any){ ... })  */}\n\n      {/* image: {iconImage} */}\n      {/* Color: https://perfectgraph-5c619.web.app/?path=/story/components-components--view */}\n      {/* <Graph\n        style={{ width: '100%', height: 250 }}\n        nodes={[\n          {\n            id: 1,\n            position: { x: 10, y: 10 },\n            data: {\n              name: 'Institute of Data Science',\n              // image: 'https://raw.githubusercontent.com/MaastrichtU-IDS/into-the-graph/main/assets/icon.png',\n              story: `Develop responsible data science by design to accelerate discovery across all sectors of society.`\n              // color: 'grey'\n            }\n          },\n          {\n            id: 2,\n            position: { x: 600, y: 10 },\n            data: {\n              name: 'Maastricht University',\n              // image: 'https://raw.githubusercontent.com/MaastrichtU-IDS/into-the-graph/main/assets/icon.png',\n              story: `The most international university in the Netherlands, stands out for its innovative education model, and multidisciplinary approach to research and education.`\n              // color: 'grey'\n            }\n          },\n        ]}\n        edges={[\n          { id: 51, source: 1, target: 2 }\n        ]}\n        renderNode={({ item: { data } }) => (\n        <Graph.ProfileTemplate\n          name={data.name}\n          // image={data.image}\n          story={data.story}\n          // color= 'grey'\n          // style={{ backgroundColor: '#eceff1' }}\n        />\n      )}\n      /> */}\n\n      <Typography variant=\"h5\" className={classes.margin} style={{ marginTop: theme.spacing(6) }}>\n        {/* <a href='https://perfectgraph-5c619.web.app/' className={classes.link} > */}\n        Perfect Graph visualization\n        {/* </a> */}\n      </Typography>\n\n      <Paper elevation={4} className={classes.paperPadding}>\n        <ApplicationProvider>\n          <Graph\n            style={{ width: '100%', height: 800 }}\n            nodes={state.graph_data.nodes}\n            edges={state.graph_data.edges}\n            // nodes={[\n            //   {\n            //     id: '1',\n            //     position: { x: 10, y: 10 },\n            //     data: { city: 'Amsterdam', color: 'red' },\n            //   },\n            //   {\n            //     id: '2',\n            //     position: { x: 300, y: 10 },\n            //     data: { city: 'Maastricht', color: 'blue' },\n            //   },\n            // ]}\n            // edges={[\n            //   { id: '51', source: '1', target: '2' },\n            // ]}\n            renderNode={({ item: { data } }: any) => (\n              <Graph.View\n                style={{ width: 100, height: 100, backgroundColor: data.color }}\n              >\n                <Graph.Text style={{ fontSize: 16 }}>\n                  {data.uri}\n                </Graph.Text>\n                {/* <LinkDescribe variant='body2' uri={data.uri}/> */}\n              </Graph.View>\n            )}\n          />\n        </ApplicationProvider>\n      </Paper>\n    \n    </Container>\n  )\n}","import React from \"react\";\nimport { View } from \"react-native\";\nimport { Router, Route } from \"./react-router\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport './App.css';\nimport NavBar from \"./src/components/NavBar\";\nimport Footer from \"./src/components/Footer\";\nimport Context from \"./src/components/Context\";\nimport Homepage from \"./src/pages/homepage\";\nimport Describe from \"./src/pages/describe\";\n\n// import blue from '@material-ui/core/colors/blue';\n\n\nexport default function App() {\n\n  const [context, setContext] = React.useState('https://bio2rdf.org/sparql');\n\n  // Change theme color and typography here\n  const theme = createMuiTheme({\n    palette: {\n      // Blue and orange\n      primary: { light: '#63a4ff', main: '#1976d2', dark: '#004ba0' },\n      secondary: { light: '#ffa040', main: '#ff6f00', dark: '#c43e00' },\n      // primary: { light: blue[50], main: blue[700], dark: blue[900] },\n      // default: { light: '#fafafa', main: '#eceff1', dark: grey[600] }\n    },\n    typography: {\n      \"fontFamily\": \"\\\"Open Sans\\\", \\\"Roboto\\\", \\\"Arial\\\"\",\n      \"fontWeightLight\": 300,\n      \"fontWeightRegular\": 400,\n      \"fontWeightMedium\": 500\n      // \"fontSize\": 13\n    },\n  });\n\n  return (\n    <Context.Provider value={[context, setContext]}>\n      <MuiThemeProvider theme={theme}>\n        <Router basename=\"/into-the-graph/\">\n          <View style={{height: '100%', backgroundColor: '#eceff1'}}>\n            <NavBar />\n\n            <Route exact path=\"/\" component={Homepage} />\n            <Route path=\"/describe\" component={Describe} />\n\n            <Footer />\n          </View>\n        </Router>\n      </MuiThemeProvider>\n    </Context.Provider>\n  );\n}\n\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/into-the-graph/expo-service-worker.js', { scope: '/into-the-graph/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","var api = require(\"!./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!./node_modules/css-loader/dist/cjs.js!./App.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"./node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/css?family=Open+Sans);\"]);\n// Module\nexports.push([module.id, \".flexGrow {\\n  flex-grow: 1; \\n}\\n\\n.mainContainer {\\n  margin-top: 30px;\\n  margin-bottom: 20px;\\n  text-align: center;\\n}\\n\\n/* a {\\n  text-transform: none;\\n  text-decoration: none\\n} */\\n\\npre, code {\\n  font-family: monospace, monospace;\\n  border-radius: 6px;\\n  padding: 2px;\\n  color: white;\\n  background-color: #455a64;\\n  /* background-color: #1976d2; */\\n}\\n  \\n/* @import url(\\\"https://fonts.googleapis.com/icon?family=Material+Icons\\\");\\nbody {\\n  margin: 0;\\n  padding: 0;\\n  text-align: center; } */\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n"],"sourceRoot":""}